2024-07-03 11:28:31,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:28:31,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:28:31,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:28:31,381:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:54:49,537:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:54:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:54:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 11:54:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-03 12:09:22,707:INFO:PyCaret ClassificationExperiment
2024-07-03 12:09:22,707:INFO:Logging name: clf-default-name
2024-07-03 12:09:22,708:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-03 12:09:22,708:INFO:version 3.3.2
2024-07-03 12:09:22,709:INFO:Initializing setup()
2024-07-03 12:09:22,709:INFO:self.USI: 2a89
2024-07-03 12:09:22,709:INFO:self._variable_keys: {'fold_groups_param', 'y', 'gpu_n_jobs_param', 'X_train', 'html_param', 'USI', 'y_train', '_ml_usecase', 'memory', 'log_plots_param', 'target_param', 'exp_id', 'fold_shuffle_param', 'gpu_param', 'X_test', 'exp_name_log', 'data', 'seed', 'pipeline', 'logging_param', 'idx', 'n_jobs_param', 'fix_imbalance', '_available_plots', 'is_multiclass', 'y_test', 'fold_generator', 'X'}
2024-07-03 12:09:22,709:INFO:Checking environment
2024-07-03 12:09:22,717:INFO:python_version: 3.11.9
2024-07-03 12:09:22,718:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-07-03 12:09:22,722:INFO:machine: AMD64
2024-07-03 12:09:22,722:INFO:platform: Windows-10-10.0.22621-SP0
2024-07-03 12:09:22,753:INFO:Memory: svmem(total=7466897408, available=1168179200, percent=84.4, used=6298718208, free=1168179200)
2024-07-03 12:09:22,754:INFO:Physical Core: 4
2024-07-03 12:09:22,754:INFO:Logical Core: 4
2024-07-03 12:09:22,754:INFO:Checking libraries
2024-07-03 12:09:22,755:INFO:System:
2024-07-03 12:09:22,755:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-07-03 12:09:22,755:INFO:executable: c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Scripts\python.exe
2024-07-03 12:09:22,755:INFO:   machine: Windows-10-10.0.22621-SP0
2024-07-03 12:09:22,755:INFO:PyCaret required dependencies:
2024-07-03 12:09:26,185:INFO:                 pip: 24.1.1
2024-07-03 12:09:26,185:INFO:          setuptools: 65.5.0
2024-07-03 12:09:26,185:INFO:             pycaret: 3.3.2
2024-07-03 12:09:26,185:INFO:             IPython: 8.26.0
2024-07-03 12:09:26,185:INFO:          ipywidgets: 8.1.3
2024-07-03 12:09:26,185:INFO:                tqdm: 4.66.4
2024-07-03 12:09:26,185:INFO:               numpy: 1.26.4
2024-07-03 12:09:26,185:INFO:              pandas: 2.1.4
2024-07-03 12:09:26,185:INFO:              jinja2: 3.1.4
2024-07-03 12:09:26,185:INFO:               scipy: 1.11.4
2024-07-03 12:09:26,185:INFO:              joblib: 1.3.2
2024-07-03 12:09:26,185:INFO:             sklearn: 1.4.2
2024-07-03 12:09:26,185:INFO:                pyod: 2.0.1
2024-07-03 12:09:26,185:INFO:            imblearn: 0.12.3
2024-07-03 12:09:26,185:INFO:   category_encoders: 2.6.3
2024-07-03 12:09:26,185:INFO:            lightgbm: 4.4.0
2024-07-03 12:09:26,185:INFO:               numba: 0.60.0
2024-07-03 12:09:26,185:INFO:            requests: 2.32.3
2024-07-03 12:09:26,185:INFO:          matplotlib: 3.7.5
2024-07-03 12:09:26,185:INFO:          scikitplot: 0.3.7
2024-07-03 12:09:26,185:INFO:         yellowbrick: 1.5
2024-07-03 12:09:26,185:INFO:              plotly: 5.22.0
2024-07-03 12:09:26,185:INFO:    plotly-resampler: Not installed
2024-07-03 12:09:26,185:INFO:             kaleido: 0.2.1
2024-07-03 12:09:26,185:INFO:           schemdraw: 0.15
2024-07-03 12:09:26,185:INFO:         statsmodels: 0.14.2
2024-07-03 12:09:26,185:INFO:              sktime: 0.26.0
2024-07-03 12:09:26,185:INFO:               tbats: 1.1.3
2024-07-03 12:09:26,185:INFO:            pmdarima: 2.0.4
2024-07-03 12:09:26,185:INFO:              psutil: 6.0.0
2024-07-03 12:09:26,185:INFO:          markupsafe: 2.1.5
2024-07-03 12:09:26,185:INFO:             pickle5: Not installed
2024-07-03 12:09:26,185:INFO:         cloudpickle: 3.0.0
2024-07-03 12:09:26,185:INFO:         deprecation: 2.1.0
2024-07-03 12:09:26,185:INFO:              xxhash: 3.4.1
2024-07-03 12:09:26,185:INFO:           wurlitzer: Not installed
2024-07-03 12:09:26,185:INFO:PyCaret optional dependencies:
2024-07-03 12:09:26,251:INFO:                shap: Not installed
2024-07-03 12:09:26,252:INFO:           interpret: Not installed
2024-07-03 12:09:26,252:INFO:                umap: Not installed
2024-07-03 12:09:26,252:INFO:     ydata_profiling: Not installed
2024-07-03 12:09:26,252:INFO:  explainerdashboard: Not installed
2024-07-03 12:09:26,252:INFO:             autoviz: Not installed
2024-07-03 12:09:26,252:INFO:           fairlearn: Not installed
2024-07-03 12:09:26,252:INFO:          deepchecks: Not installed
2024-07-03 12:09:26,253:INFO:             xgboost: Not installed
2024-07-03 12:09:26,253:INFO:            catboost: Not installed
2024-07-03 12:09:26,253:INFO:              kmodes: Not installed
2024-07-03 12:09:26,253:INFO:             mlxtend: Not installed
2024-07-03 12:09:26,253:INFO:       statsforecast: Not installed
2024-07-03 12:09:26,253:INFO:        tune_sklearn: Not installed
2024-07-03 12:09:26,253:INFO:                 ray: Not installed
2024-07-03 12:09:26,253:INFO:            hyperopt: Not installed
2024-07-03 12:09:26,253:INFO:              optuna: Not installed
2024-07-03 12:09:26,253:INFO:               skopt: Not installed
2024-07-03 12:09:26,253:INFO:              mlflow: Not installed
2024-07-03 12:09:26,253:INFO:              gradio: Not installed
2024-07-03 12:09:26,253:INFO:             fastapi: Not installed
2024-07-03 12:09:26,253:INFO:             uvicorn: Not installed
2024-07-03 12:09:26,253:INFO:              m2cgen: Not installed
2024-07-03 12:09:26,253:INFO:           evidently: Not installed
2024-07-03 12:09:26,253:INFO:               fugue: Not installed
2024-07-03 12:09:26,253:INFO:           streamlit: 1.36.0
2024-07-03 12:09:26,253:INFO:             prophet: Not installed
2024-07-03 12:09:26,253:INFO:None
2024-07-03 12:09:26,253:INFO:Set up data.
2024-07-03 12:09:26,369:INFO:Set up folding strategy.
2024-07-03 12:09:26,369:INFO:Set up train/test split.
2024-07-03 12:09:26,817:INFO:Set up index.
2024-07-03 12:09:26,819:INFO:Assigning column types.
2024-07-03 12:09:26,828:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-03 12:09:27,294:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-03 12:09:27,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-03 12:09:27,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:27,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:28,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-03 12:09:28,124:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-03 12:09:28,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:28,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:28,367:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-03 12:09:28,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-03 12:09:29,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:29,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:29,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-03 12:09:29,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:29,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:29,727:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-03 12:09:30,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:30,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:31,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:31,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:31,332:INFO:Preparing preprocessing pipeline...
2024-07-03 12:09:31,426:INFO:Set up label encoding.
2024-07-03 12:09:31,426:INFO:Set up simple imputation.
2024-07-03 12:09:31,441:INFO:Set up column name cleaning.
2024-07-03 12:09:31,629:INFO:Finished creating preprocessing pipeline.
2024-07-03 12:09:31,673:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Seyman\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-03 12:09:31,673:INFO:Creating final display dataframe.
2024-07-03 12:09:32,139:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     8294
1                        Target              set[string]
2                   Target type                   Binary
3                Target mapping  Benign: 0, Malicious: 1
4           Original data shape                (9072, 6)
5        Transformed data shape                (9072, 6)
6   Transformed train set shape                (6350, 6)
7    Transformed test set shape                (2722, 6)
8              Numeric features                        5
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     2a89
2024-07-03 12:09:32,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:32,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:33,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:33,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-03 12:09:33,562:INFO:setup() successfully completed in 10.87s...............
2024-07-03 12:09:33,563:INFO:Initializing compare_models()
2024-07-03 12:09:33,563:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-03 12:09:33,563:INFO:Checking exceptions
2024-07-03 12:09:33,589:INFO:Preparing display monitor
2024-07-03 12:09:33,738:INFO:Initializing Logistic Regression
2024-07-03 12:09:33,738:INFO:Total runtime is 0.0 minutes
2024-07-03 12:09:33,772:INFO:SubProcess create_model() called ==================================
2024-07-03 12:09:33,772:INFO:Initializing create_model()
2024-07-03 12:09:33,772:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:09:33,772:INFO:Checking exceptions
2024-07-03 12:09:33,772:INFO:Importing libraries
2024-07-03 12:09:33,772:INFO:Copying training dataset
2024-07-03 12:09:33,827:INFO:Defining folds
2024-07-03 12:09:33,828:INFO:Declaring metric variables
2024-07-03 12:09:33,854:INFO:Importing untrained model
2024-07-03 12:09:33,877:INFO:Logistic Regression Imported successfully
2024-07-03 12:09:33,912:INFO:Starting cross validation
2024-07-03 12:09:33,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:16,401:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,401:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,401:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,411:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,691:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,691:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,691:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,696:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,712:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,712:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,712:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:16,721:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,614:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,646:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,681:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,722:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,722:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,732:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,742:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,753:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,769:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,774:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,774:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:17,795:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,078:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,099:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,126:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,179:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,211:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,247:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:18,304:INFO:Calculating mean and std
2024-07-03 12:10:19,444:INFO:Creating metrics dataframe
2024-07-03 12:10:19,745:INFO:Uploading results into container
2024-07-03 12:10:19,745:INFO:Uploading model into container now
2024-07-03 12:10:19,745:INFO:_master_model_container: 1
2024-07-03 12:10:19,745:INFO:_display_container: 2
2024-07-03 12:10:19,745:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8294, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-03 12:10:19,760:INFO:create_model() successfully completed......................................
2024-07-03 12:10:20,408:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:20,408:INFO:Creating metrics dataframe
2024-07-03 12:10:20,445:INFO:Initializing K Neighbors Classifier
2024-07-03 12:10:20,446:INFO:Total runtime is 0.7784735560417175 minutes
2024-07-03 12:10:20,463:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:20,463:INFO:Initializing create_model()
2024-07-03 12:10:20,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:20,467:INFO:Checking exceptions
2024-07-03 12:10:20,468:INFO:Importing libraries
2024-07-03 12:10:20,468:INFO:Copying training dataset
2024-07-03 12:10:20,536:INFO:Defining folds
2024-07-03 12:10:20,536:INFO:Declaring metric variables
2024-07-03 12:10:20,563:INFO:Importing untrained model
2024-07-03 12:10:20,568:INFO:K Neighbors Classifier Imported successfully
2024-07-03 12:10:20,611:INFO:Starting cross validation
2024-07-03 12:10:20,616:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:23,963:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:23,963:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:23,963:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,001:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,006:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,014:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,014:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,032:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,033:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,040:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,041:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,056:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,485:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,485:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,514:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,523:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,534:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,539:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,547:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,563:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,584:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,597:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,616:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,657:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,935:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,936:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,951:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,951:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,977:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:24,977:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:25,189:INFO:Calculating mean and std
2024-07-03 12:10:25,194:INFO:Creating metrics dataframe
2024-07-03 12:10:25,211:INFO:Uploading results into container
2024-07-03 12:10:25,214:INFO:Uploading model into container now
2024-07-03 12:10:25,231:INFO:_master_model_container: 2
2024-07-03 12:10:25,231:INFO:_display_container: 2
2024-07-03 12:10:25,231:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-03 12:10:25,231:INFO:create_model() successfully completed......................................
2024-07-03 12:10:25,679:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:25,679:INFO:Creating metrics dataframe
2024-07-03 12:10:25,763:INFO:Initializing Naive Bayes
2024-07-03 12:10:25,763:INFO:Total runtime is 0.8670840303103129 minutes
2024-07-03 12:10:25,779:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:25,779:INFO:Initializing create_model()
2024-07-03 12:10:25,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:25,779:INFO:Checking exceptions
2024-07-03 12:10:25,779:INFO:Importing libraries
2024-07-03 12:10:25,796:INFO:Copying training dataset
2024-07-03 12:10:25,848:INFO:Defining folds
2024-07-03 12:10:25,849:INFO:Declaring metric variables
2024-07-03 12:10:25,874:INFO:Importing untrained model
2024-07-03 12:10:25,913:INFO:Naive Bayes Imported successfully
2024-07-03 12:10:25,966:INFO:Starting cross validation
2024-07-03 12:10:25,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:26,195:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,213:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,228:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,233:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,233:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,233:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,244:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,266:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,270:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,278:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,295:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,477:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,487:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,512:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,517:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,518:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,522:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,532:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,532:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,532:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,543:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,563:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,563:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,705:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,716:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,728:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,728:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,759:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,769:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:26,821:INFO:Calculating mean and std
2024-07-03 12:10:26,825:INFO:Creating metrics dataframe
2024-07-03 12:10:26,836:INFO:Uploading results into container
2024-07-03 12:10:26,836:INFO:Uploading model into container now
2024-07-03 12:10:26,848:INFO:_master_model_container: 3
2024-07-03 12:10:26,849:INFO:_display_container: 2
2024-07-03 12:10:26,851:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-03 12:10:26,853:INFO:create_model() successfully completed......................................
2024-07-03 12:10:27,694:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:27,694:INFO:Creating metrics dataframe
2024-07-03 12:10:27,724:INFO:Initializing Decision Tree Classifier
2024-07-03 12:10:27,724:INFO:Total runtime is 0.8997799197832743 minutes
2024-07-03 12:10:27,727:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:27,741:INFO:Initializing create_model()
2024-07-03 12:10:27,741:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:27,742:INFO:Checking exceptions
2024-07-03 12:10:27,742:INFO:Importing libraries
2024-07-03 12:10:27,742:INFO:Copying training dataset
2024-07-03 12:10:27,779:INFO:Defining folds
2024-07-03 12:10:27,783:INFO:Declaring metric variables
2024-07-03 12:10:27,814:INFO:Importing untrained model
2024-07-03 12:10:27,837:INFO:Decision Tree Classifier Imported successfully
2024-07-03 12:10:27,900:INFO:Starting cross validation
2024-07-03 12:10:27,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:28,359:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,378:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,393:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,399:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,399:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,411:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,426:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,430:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,430:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,430:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,451:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,461:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,648:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,669:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,673:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,692:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,692:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,692:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,692:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,716:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,719:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,719:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,745:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,748:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,875:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,896:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,902:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,910:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,920:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,941:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:28,973:INFO:Calculating mean and std
2024-07-03 12:10:28,975:INFO:Creating metrics dataframe
2024-07-03 12:10:28,975:INFO:Uploading results into container
2024-07-03 12:10:28,990:INFO:Uploading model into container now
2024-07-03 12:10:28,992:INFO:_master_model_container: 4
2024-07-03 12:10:28,992:INFO:_display_container: 2
2024-07-03 12:10:28,993:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best')
2024-07-03 12:10:28,994:INFO:create_model() successfully completed......................................
2024-07-03 12:10:29,475:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:29,475:INFO:Creating metrics dataframe
2024-07-03 12:10:29,500:INFO:Initializing SVM - Linear Kernel
2024-07-03 12:10:29,509:INFO:Total runtime is 0.9293725331624348 minutes
2024-07-03 12:10:29,525:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:29,525:INFO:Initializing create_model()
2024-07-03 12:10:29,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:29,525:INFO:Checking exceptions
2024-07-03 12:10:29,525:INFO:Importing libraries
2024-07-03 12:10:29,525:INFO:Copying training dataset
2024-07-03 12:10:29,597:INFO:Defining folds
2024-07-03 12:10:29,598:INFO:Declaring metric variables
2024-07-03 12:10:29,623:INFO:Importing untrained model
2024-07-03 12:10:29,656:INFO:SVM - Linear Kernel Imported successfully
2024-07-03 12:10:29,715:INFO:Starting cross validation
2024-07-03 12:10:29,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:30,399:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,400:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,429:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,429:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,429:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,460:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,461:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,474:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,474:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,499:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,500:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,533:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,923:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,943:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:30,957:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,016:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,047:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,078:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,111:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,142:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,142:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,152:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,226:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,258:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,604:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,605:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,622:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,643:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:31,674:INFO:Calculating mean and std
2024-07-03 12:10:31,674:INFO:Creating metrics dataframe
2024-07-03 12:10:31,693:INFO:Uploading results into container
2024-07-03 12:10:31,693:INFO:Uploading model into container now
2024-07-03 12:10:31,693:INFO:_master_model_container: 5
2024-07-03 12:10:31,693:INFO:_display_container: 2
2024-07-03 12:10:31,693:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8294, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-03 12:10:31,693:INFO:create_model() successfully completed......................................
2024-07-03 12:10:32,174:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:32,189:INFO:Creating metrics dataframe
2024-07-03 12:10:32,222:INFO:Initializing Ridge Classifier
2024-07-03 12:10:32,222:INFO:Total runtime is 0.9747338414192199 minutes
2024-07-03 12:10:32,238:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:32,238:INFO:Initializing create_model()
2024-07-03 12:10:32,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:32,238:INFO:Checking exceptions
2024-07-03 12:10:32,238:INFO:Importing libraries
2024-07-03 12:10:32,238:INFO:Copying training dataset
2024-07-03 12:10:32,295:INFO:Defining folds
2024-07-03 12:10:32,295:INFO:Declaring metric variables
2024-07-03 12:10:32,336:INFO:Importing untrained model
2024-07-03 12:10:32,356:INFO:Ridge Classifier Imported successfully
2024-07-03 12:10:32,414:INFO:Starting cross validation
2024-07-03 12:10:32,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:34,107:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,119:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,124:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,134:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,138:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,148:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,148:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,158:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,158:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,168:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,168:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,189:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,357:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,357:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,385:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,386:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,389:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,389:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,401:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,409:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,409:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,409:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,436:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,452:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,570:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,600:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,601:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,631:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,631:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,658:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:34,695:INFO:Calculating mean and std
2024-07-03 12:10:34,701:INFO:Creating metrics dataframe
2024-07-03 12:10:34,723:INFO:Uploading results into container
2024-07-03 12:10:34,729:INFO:Uploading model into container now
2024-07-03 12:10:34,732:INFO:_master_model_container: 6
2024-07-03 12:10:34,732:INFO:_display_container: 2
2024-07-03 12:10:34,737:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8294, solver='auto',
                tol=0.0001)
2024-07-03 12:10:34,738:INFO:create_model() successfully completed......................................
2024-07-03 12:10:35,235:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:35,235:INFO:Creating metrics dataframe
2024-07-03 12:10:35,283:INFO:Initializing Random Forest Classifier
2024-07-03 12:10:35,284:INFO:Total runtime is 1.0257697820663452 minutes
2024-07-03 12:10:35,301:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:35,302:INFO:Initializing create_model()
2024-07-03 12:10:35,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:35,302:INFO:Checking exceptions
2024-07-03 12:10:35,302:INFO:Importing libraries
2024-07-03 12:10:35,302:INFO:Copying training dataset
2024-07-03 12:10:35,388:INFO:Defining folds
2024-07-03 12:10:35,389:INFO:Declaring metric variables
2024-07-03 12:10:35,436:INFO:Importing untrained model
2024-07-03 12:10:35,449:INFO:Random Forest Classifier Imported successfully
2024-07-03 12:10:35,520:INFO:Starting cross validation
2024-07-03 12:10:35,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:39,969:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:39,969:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,007:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,053:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,058:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,064:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,095:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,095:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,142:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,153:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,185:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:40,217:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,538:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,614:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,623:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,659:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,668:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,688:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,889:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,929:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:43,950:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:44,030:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:44,053:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:44,119:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,774:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,800:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,828:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,911:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,932:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:45,960:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:46,000:INFO:Calculating mean and std
2024-07-03 12:10:46,009:INFO:Creating metrics dataframe
2024-07-03 12:10:46,016:INFO:Uploading results into container
2024-07-03 12:10:46,022:INFO:Uploading model into container now
2024-07-03 12:10:46,024:INFO:_master_model_container: 7
2024-07-03 12:10:46,025:INFO:_display_container: 2
2024-07-03 12:10:46,028:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False)
2024-07-03 12:10:46,029:INFO:create_model() successfully completed......................................
2024-07-03 12:10:46,506:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:46,506:INFO:Creating metrics dataframe
2024-07-03 12:10:46,565:INFO:Initializing Quadratic Discriminant Analysis
2024-07-03 12:10:46,565:INFO:Total runtime is 1.2137866775194803 minutes
2024-07-03 12:10:46,581:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:46,581:INFO:Initializing create_model()
2024-07-03 12:10:46,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:46,581:INFO:Checking exceptions
2024-07-03 12:10:46,581:INFO:Importing libraries
2024-07-03 12:10:46,581:INFO:Copying training dataset
2024-07-03 12:10:46,626:INFO:Defining folds
2024-07-03 12:10:46,627:INFO:Declaring metric variables
2024-07-03 12:10:46,657:INFO:Importing untrained model
2024-07-03 12:10:46,688:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-03 12:10:46,773:INFO:Starting cross validation
2024-07-03 12:10:46,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:47,807:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:47,807:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:47,830:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:47,830:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,846:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,862:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,871:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,871:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,878:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:47,894:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,898:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:47,898:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,293:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,293:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,300:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,300:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,309:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,309:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,309:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,325:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,338:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,346:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,346:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,353:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,353:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,362:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,474:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,494:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,502:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,505:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,505:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,505:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,505:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,526:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,540:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,540:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,544:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

t_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,563:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,563:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,567:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,567:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,567:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,567:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,579:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,579:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,587:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,587:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,598:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,598:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,608:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,611:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,611:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,611:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,618:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,626:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,628:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,628:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,642:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,700:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,726:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-03 12:10:48,726:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,726:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,726:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,742:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,742:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,742:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,751:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,754:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,755:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,755:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,763:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,763:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,763:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-03 12:10:48,763:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-03 12:10:48,772:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-03 12:10:48,782:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,782:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,803:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,803:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,811:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,813:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:10:48,827:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:48,864:INFO:Calculating mean and std
2024-07-03 12:10:48,864:INFO:Creating metrics dataframe
2024-07-03 12:10:48,889:INFO:Uploading results into container
2024-07-03 12:10:48,892:INFO:Uploading model into container now
2024-07-03 12:10:48,892:INFO:_master_model_container: 8
2024-07-03 12:10:48,892:INFO:_display_container: 2
2024-07-03 12:10:48,892:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-03 12:10:48,892:INFO:create_model() successfully completed......................................
2024-07-03 12:10:49,336:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:49,336:INFO:Creating metrics dataframe
2024-07-03 12:10:49,379:INFO:Initializing Ada Boost Classifier
2024-07-03 12:10:49,380:INFO:Total runtime is 1.2607066353162129 minutes
2024-07-03 12:10:49,392:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:49,393:INFO:Initializing create_model()
2024-07-03 12:10:49,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:49,394:INFO:Checking exceptions
2024-07-03 12:10:49,395:INFO:Importing libraries
2024-07-03 12:10:49,395:INFO:Copying training dataset
2024-07-03 12:10:49,427:INFO:Defining folds
2024-07-03 12:10:49,428:INFO:Declaring metric variables
2024-07-03 12:10:49,456:INFO:Importing untrained model
2024-07-03 12:10:49,488:INFO:Ada Boost Classifier Imported successfully
2024-07-03 12:10:49,534:INFO:Starting cross validation
2024-07-03 12:10:49,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:49,802:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:51,436:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,467:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,489:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,500:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,500:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,507:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,518:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,531:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,532:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,556:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,565:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:51,586:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:51,633:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:51,666:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:51,672:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:52,684:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,725:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,745:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,745:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,749:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,781:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,792:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,806:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,815:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,823:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,845:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:52,845:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,866:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:52,899:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-03 12:10:53,765:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,817:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,856:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,877:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,896:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,914:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:53,951:INFO:Calculating mean and std
2024-07-03 12:10:53,955:INFO:Creating metrics dataframe
2024-07-03 12:10:53,961:INFO:Uploading results into container
2024-07-03 12:10:53,963:INFO:Uploading model into container now
2024-07-03 12:10:53,964:INFO:_master_model_container: 9
2024-07-03 12:10:53,964:INFO:_display_container: 2
2024-07-03 12:10:53,965:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8294)
2024-07-03 12:10:53,965:INFO:create_model() successfully completed......................................
2024-07-03 12:10:54,470:INFO:SubProcess create_model() end ==================================
2024-07-03 12:10:54,471:INFO:Creating metrics dataframe
2024-07-03 12:10:54,520:INFO:Initializing Gradient Boosting Classifier
2024-07-03 12:10:54,521:INFO:Total runtime is 1.3463878432909646 minutes
2024-07-03 12:10:54,539:INFO:SubProcess create_model() called ==================================
2024-07-03 12:10:54,540:INFO:Initializing create_model()
2024-07-03 12:10:54,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:10:54,542:INFO:Checking exceptions
2024-07-03 12:10:54,543:INFO:Importing libraries
2024-07-03 12:10:54,543:INFO:Copying training dataset
2024-07-03 12:10:54,586:INFO:Defining folds
2024-07-03 12:10:54,587:INFO:Declaring metric variables
2024-07-03 12:10:54,606:INFO:Importing untrained model
2024-07-03 12:10:54,624:INFO:Gradient Boosting Classifier Imported successfully
2024-07-03 12:10:54,665:INFO:Starting cross validation
2024-07-03 12:10:54,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:10:58,383:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,399:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,415:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,415:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,431:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,449:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,453:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,469:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,484:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,484:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,500:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:10:58,500:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,894:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,917:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,931:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,947:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,952:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,963:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,980:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:00,980:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:01,015:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:01,018:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:01,047:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,024:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,053:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,055:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,065:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,075:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:03,118:INFO:Calculating mean and std
2024-07-03 12:11:03,118:INFO:Creating metrics dataframe
2024-07-03 12:11:03,149:INFO:Uploading results into container
2024-07-03 12:11:03,157:INFO:Uploading model into container now
2024-07-03 12:11:03,157:INFO:_master_model_container: 10
2024-07-03 12:11:03,157:INFO:_display_container: 2
2024-07-03 12:11:03,157:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8294, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-03 12:11:03,157:INFO:create_model() successfully completed......................................
2024-07-03 12:11:03,680:INFO:SubProcess create_model() end ==================================
2024-07-03 12:11:03,680:INFO:Creating metrics dataframe
2024-07-03 12:11:03,711:INFO:Initializing Linear Discriminant Analysis
2024-07-03 12:11:03,711:INFO:Total runtime is 1.4995629310607907 minutes
2024-07-03 12:11:03,743:INFO:SubProcess create_model() called ==================================
2024-07-03 12:11:03,743:INFO:Initializing create_model()
2024-07-03 12:11:03,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:03,743:INFO:Checking exceptions
2024-07-03 12:11:03,743:INFO:Importing libraries
2024-07-03 12:11:03,743:INFO:Copying training dataset
2024-07-03 12:11:03,811:INFO:Defining folds
2024-07-03 12:11:03,821:INFO:Declaring metric variables
2024-07-03 12:11:03,854:INFO:Importing untrained model
2024-07-03 12:11:03,885:INFO:Linear Discriminant Analysis Imported successfully
2024-07-03 12:11:03,941:INFO:Starting cross validation
2024-07-03 12:11:03,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:11:06,375:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,390:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,390:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,390:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,408:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,408:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,418:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,418:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,442:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,444:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,444:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,641:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,645:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,658:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,666:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,677:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,677:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,690:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,697:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,706:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,708:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,708:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,875:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,875:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,892:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,902:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,912:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,922:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:06,963:INFO:Calculating mean and std
2024-07-03 12:11:06,971:INFO:Creating metrics dataframe
2024-07-03 12:11:06,987:INFO:Uploading results into container
2024-07-03 12:11:06,987:INFO:Uploading model into container now
2024-07-03 12:11:06,987:INFO:_master_model_container: 11
2024-07-03 12:11:06,987:INFO:_display_container: 2
2024-07-03 12:11:06,987:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-03 12:11:06,987:INFO:create_model() successfully completed......................................
2024-07-03 12:11:07,438:INFO:SubProcess create_model() end ==================================
2024-07-03 12:11:07,438:INFO:Creating metrics dataframe
2024-07-03 12:11:07,485:INFO:Initializing Extra Trees Classifier
2024-07-03 12:11:07,485:INFO:Total runtime is 1.5624540845553077 minutes
2024-07-03 12:11:07,505:INFO:SubProcess create_model() called ==================================
2024-07-03 12:11:07,507:INFO:Initializing create_model()
2024-07-03 12:11:07,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:07,509:INFO:Checking exceptions
2024-07-03 12:11:07,509:INFO:Importing libraries
2024-07-03 12:11:07,509:INFO:Copying training dataset
2024-07-03 12:11:07,551:INFO:Defining folds
2024-07-03 12:11:07,552:INFO:Declaring metric variables
2024-07-03 12:11:07,589:INFO:Importing untrained model
2024-07-03 12:11:07,622:INFO:Extra Trees Classifier Imported successfully
2024-07-03 12:11:07,676:INFO:Starting cross validation
2024-07-03 12:11:07,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:11:10,667:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,680:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,698:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,718:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,728:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,729:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,749:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,749:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,764:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,767:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,780:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:10,813:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,681:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,692:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,727:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,727:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,797:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,813:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,821:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,860:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:12,912:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:13,478:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:13,502:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:13,614:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,377:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,377:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,411:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,429:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,429:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:14,475:INFO:Calculating mean and std
2024-07-03 12:11:14,475:INFO:Creating metrics dataframe
2024-07-03 12:11:14,475:INFO:Uploading results into container
2024-07-03 12:11:14,489:INFO:Uploading model into container now
2024-07-03 12:11:14,491:INFO:_master_model_container: 12
2024-07-03 12:11:14,491:INFO:_display_container: 2
2024-07-03 12:11:14,493:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8294, verbose=0,
                     warm_start=False)
2024-07-03 12:11:14,497:INFO:create_model() successfully completed......................................
2024-07-03 12:11:14,991:INFO:SubProcess create_model() end ==================================
2024-07-03 12:11:14,991:INFO:Creating metrics dataframe
2024-07-03 12:11:15,023:INFO:Initializing Light Gradient Boosting Machine
2024-07-03 12:11:15,023:INFO:Total runtime is 1.6880880196889239 minutes
2024-07-03 12:11:15,055:INFO:SubProcess create_model() called ==================================
2024-07-03 12:11:15,057:INFO:Initializing create_model()
2024-07-03 12:11:15,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:15,057:INFO:Checking exceptions
2024-07-03 12:11:15,057:INFO:Importing libraries
2024-07-03 12:11:15,057:INFO:Copying training dataset
2024-07-03 12:11:15,100:INFO:Defining folds
2024-07-03 12:11:15,101:INFO:Declaring metric variables
2024-07-03 12:11:15,125:INFO:Importing untrained model
2024-07-03 12:11:15,149:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-03 12:11:15,220:INFO:Starting cross validation
2024-07-03 12:11:15,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:11:17,882:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,883:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,883:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,884:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,903:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,903:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,913:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,913:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,921:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,921:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,921:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:17,946:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:18,838:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:18,876:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:18,909:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:18,993:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,025:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,036:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,053:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,056:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,066:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,087:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,087:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,107:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,628:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,657:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,669:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,679:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,689:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,717:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:19,763:INFO:Calculating mean and std
2024-07-03 12:11:19,769:INFO:Creating metrics dataframe
2024-07-03 12:11:19,778:INFO:Uploading results into container
2024-07-03 12:11:19,803:INFO:Uploading model into container now
2024-07-03 12:11:19,803:INFO:_master_model_container: 13
2024-07-03 12:11:19,803:INFO:_display_container: 2
2024-07-03 12:11:19,803:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8294, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-03 12:11:19,803:INFO:create_model() successfully completed......................................
2024-07-03 12:11:20,251:INFO:SubProcess create_model() end ==================================
2024-07-03 12:11:20,549:INFO:Creating metrics dataframe
2024-07-03 12:11:20,583:INFO:Initializing Dummy Classifier
2024-07-03 12:11:20,583:INFO:Total runtime is 1.7807590405146279 minutes
2024-07-03 12:11:20,601:INFO:SubProcess create_model() called ==================================
2024-07-03 12:11:20,601:INFO:Initializing create_model()
2024-07-03 12:11:20,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FFC8FD7990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:20,601:INFO:Checking exceptions
2024-07-03 12:11:20,601:INFO:Importing libraries
2024-07-03 12:11:20,601:INFO:Copying training dataset
2024-07-03 12:11:20,643:INFO:Defining folds
2024-07-03 12:11:20,644:INFO:Declaring metric variables
2024-07-03 12:11:20,661:INFO:Importing untrained model
2024-07-03 12:11:20,708:INFO:Dummy Classifier Imported successfully
2024-07-03 12:11:20,785:INFO:Starting cross validation
2024-07-03 12:11:20,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-03 12:11:21,004:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,004:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,025:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,025:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,035:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,035:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,053:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,056:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,060:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,061:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,062:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,073:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,073:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,077:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,088:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,088:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,240:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,251:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,251:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,265:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,271:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,271:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,271:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,289:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,292:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,292:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,302:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,302:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,302:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,302:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,312:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,312:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,460:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,484:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,491:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,502:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,506:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-03 12:11:21,512:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,517:WARNING:c:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-03 12:11:21,554:INFO:Calculating mean and std
2024-07-03 12:11:21,554:INFO:Creating metrics dataframe
2024-07-03 12:11:21,554:INFO:Uploading results into container
2024-07-03 12:11:21,575:INFO:Uploading model into container now
2024-07-03 12:11:21,578:INFO:_master_model_container: 14
2024-07-03 12:11:21,579:INFO:_display_container: 2
2024-07-03 12:11:21,580:INFO:DummyClassifier(constant=None, random_state=8294, strategy='prior')
2024-07-03 12:11:21,582:INFO:create_model() successfully completed......................................
2024-07-03 12:11:22,051:INFO:SubProcess create_model() end ==================================
2024-07-03 12:11:22,051:INFO:Creating metrics dataframe
2024-07-03 12:11:22,151:INFO:Initializing create_model()
2024-07-03 12:11:22,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:22,152:INFO:Checking exceptions
2024-07-03 12:11:22,160:INFO:Importing libraries
2024-07-03 12:11:22,160:INFO:Copying training dataset
2024-07-03 12:11:22,189:INFO:Defining folds
2024-07-03 12:11:22,190:INFO:Declaring metric variables
2024-07-03 12:11:22,191:INFO:Importing untrained model
2024-07-03 12:11:22,192:INFO:Declaring custom model
2024-07-03 12:11:22,196:INFO:Decision Tree Classifier Imported successfully
2024-07-03 12:11:22,203:INFO:Cross validation set to False
2024-07-03 12:11:22,203:INFO:Fitting Model
2024-07-03 12:11:22,334:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best')
2024-07-03 12:11:22,334:INFO:create_model() successfully completed......................................
2024-07-03 12:11:22,834:INFO:Initializing create_model()
2024-07-03 12:11:24,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:24,319:INFO:Checking exceptions
2024-07-03 12:11:24,321:INFO:Importing libraries
2024-07-03 12:11:24,321:INFO:Copying training dataset
2024-07-03 12:11:24,345:INFO:Defining folds
2024-07-03 12:11:24,345:INFO:Declaring metric variables
2024-07-03 12:11:24,346:INFO:Importing untrained model
2024-07-03 12:11:24,346:INFO:Declaring custom model
2024-07-03 12:11:24,347:INFO:Random Forest Classifier Imported successfully
2024-07-03 12:11:24,347:INFO:Cross validation set to False
2024-07-03 12:11:24,347:INFO:Fitting Model
2024-07-03 12:11:25,914:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False)
2024-07-03 12:11:25,914:INFO:create_model() successfully completed......................................
2024-07-03 12:11:26,609:INFO:_master_model_container: 14
2024-07-03 12:11:26,609:INFO:_display_container: 2
2024-07-03 12:11:26,635:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False)]
2024-07-03 12:11:26,636:INFO:compare_models() successfully completed......................................
2024-07-03 12:11:26,638:INFO:Initializing finalize_model()
2024-07-03 12:11:26,638:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-03 12:11:26,639:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best')
2024-07-03 12:11:26,662:INFO:Initializing create_model()
2024-07-03 12:11:26,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8294, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:26,662:INFO:Checking exceptions
2024-07-03 12:11:26,670:INFO:Importing libraries
2024-07-03 12:11:26,670:INFO:Copying training dataset
2024-07-03 12:11:26,673:INFO:Defining folds
2024-07-03 12:11:26,674:INFO:Declaring metric variables
2024-07-03 12:11:26,674:INFO:Importing untrained model
2024-07-03 12:11:26,675:INFO:Declaring custom model
2024-07-03 12:11:26,679:INFO:Decision Tree Classifier Imported successfully
2024-07-03 12:11:26,682:INFO:Cross validation set to False
2024-07-03 12:11:26,682:INFO:Fitting Model
2024-07-03 12:11:26,815:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False)
2024-07-03 12:11:26,815:INFO:create_model() successfully completed......................................
2024-07-03 12:11:27,250:INFO:_master_model_container: 14
2024-07-03 12:11:27,250:INFO:_display_container: 2
2024-07-03 12:11:27,266:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False)
2024-07-03 12:11:27,266:INFO:finalize_model() successfully completed......................................
2024-07-03 12:11:27,751:INFO:Initializing predict_model()
2024-07-03 12:11:27,751:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFC11DFF60>)
2024-07-03 12:11:27,751:INFO:Checking exceptions
2024-07-03 12:11:27,751:INFO:Preloading libraries
2024-07-03 12:11:29,795:INFO:Initializing finalize_model()
2024-07-03 12:11:29,795:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-03 12:11:29,797:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False)
2024-07-03 12:11:29,808:INFO:Initializing create_model()
2024-07-03 12:11:29,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8294, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-03 12:11:29,808:INFO:Checking exceptions
2024-07-03 12:11:29,808:INFO:Importing libraries
2024-07-03 12:11:29,808:INFO:Copying training dataset
2024-07-03 12:11:29,824:INFO:Defining folds
2024-07-03 12:11:29,824:INFO:Declaring metric variables
2024-07-03 12:11:29,825:INFO:Importing untrained model
2024-07-03 12:11:29,826:INFO:Declaring custom model
2024-07-03 12:11:29,828:INFO:Random Forest Classifier Imported successfully
2024-07-03 12:11:29,831:INFO:Cross validation set to False
2024-07-03 12:11:29,831:INFO:Fitting Model
2024-07-03 12:11:31,446:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8294, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-03 12:11:31,446:INFO:create_model() successfully completed......................................
2024-07-03 12:11:31,839:INFO:_master_model_container: 14
2024-07-03 12:11:31,839:INFO:_display_container: 3
2024-07-03 12:11:31,862:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8294, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-03 12:11:31,862:INFO:finalize_model() successfully completed......................................
2024-07-03 12:11:32,304:INFO:Initializing predict_model()
2024-07-03 12:11:32,304:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8294, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFBE1F9A80>)
2024-07-03 12:11:32,304:INFO:Checking exceptions
2024-07-03 12:11:32,304:INFO:Preloading libraries
2024-07-03 12:11:33,767:INFO:Initializing plot_model()
2024-07-03 12:11:33,767:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-03 12:11:33,767:INFO:Checking exceptions
2024-07-03 12:11:33,846:INFO:Preloading libraries
2024-07-03 12:11:33,869:INFO:Copying training dataset
2024-07-03 12:11:33,869:INFO:Plot type: boundary
2024-07-03 12:11:34,194:INFO:Fitting StandardScaler()
2024-07-03 12:11:34,210:INFO:Fitting PCA()
2024-07-03 12:11:34,632:INFO:Fitting Model
2024-07-03 12:11:42,782:INFO:Visual Rendered Successfully
2024-07-03 12:11:43,329:INFO:plot_model() successfully completed......................................
2024-07-03 12:11:43,360:INFO:Initializing plot_model()
2024-07-03 12:11:43,360:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8294, verbose=0,
                                        warm_start=False))],
         verbose=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-03 12:11:43,360:INFO:Checking exceptions
2024-07-03 12:11:43,478:INFO:Preloading libraries
2024-07-03 12:11:43,590:INFO:Copying training dataset
2024-07-03 12:11:43,590:INFO:Plot type: boundary
2024-07-03 12:11:43,728:INFO:Fitting StandardScaler()
2024-07-03 12:11:43,744:INFO:Fitting PCA()
2024-07-03 12:11:43,892:INFO:Fitting Model
2024-07-03 12:11:49,815:INFO:Visual Rendered Successfully
2024-07-03 12:11:50,925:INFO:plot_model() successfully completed......................................
2024-07-03 12:11:52,604:INFO:Initializing save_model()
2024-07-03 12:11:52,604:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False), model_name=next_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Seyman\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-03 12:11:52,604:INFO:Adding model into prep_pipe
2024-07-03 12:11:52,616:WARNING:Only Model saved as it was a pipeline.
2024-07-03 12:11:52,654:INFO:next_best_model.pkl saved in current working directory
2024-07-03 12:11:52,687:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False)
2024-07-03 12:11:52,688:INFO:save_model() successfully completed......................................
2024-07-03 12:11:53,620:INFO:Initializing load_model()
2024-07-03 12:11:53,620:INFO:load_model(model_name=next_best_model, platform=None, authentication=None, verbose=True)
2024-07-03 12:11:53,807:INFO:Initializing predict_model()
2024-07-03 12:11:53,807:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFC8A99690>, estimator=Pipeline(memory=FastMemory(location=C:\Users\Seyman\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8294,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFC9263880>)
2024-07-03 12:11:53,814:INFO:Checking exceptions
2024-07-03 12:11:53,814:INFO:Preloading libraries
2024-07-05 06:46:15,948:WARNING:C:\Users\Seyman\Desktop\ola's gigs\Threat_detection_in_cloud\main.py:52: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.countplot(x='predictions', data=df, palette='viridis')

2024-07-10 10:32:55,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:32:55,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:32:55,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:32:55,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:34:00,279:INFO:PyCaret ClassificationExperiment
2024-07-10 10:34:00,279:INFO:Logging name: clf-default-name
2024-07-10 10:34:00,279:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 10:34:00,279:INFO:version 3.3.2
2024-07-10 10:34:00,279:INFO:Initializing setup()
2024-07-10 10:34:00,279:INFO:self.USI: 5926
2024-07-10 10:34:00,279:INFO:self._variable_keys: {'target_param', 'USI', 'X_test', 'gpu_param', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance', 'exp_id', 'fold_groups_param', 'y', 'seed', 'is_multiclass', 'html_param', 'exp_name_log', 'pipeline', 'memory', '_ml_usecase', 'X_train', 'log_plots_param', 'y_train', 'n_jobs_param', 'y_test', 'idx', 'gpu_n_jobs_param', '_available_plots', 'X', 'data'}
2024-07-10 10:34:00,279:INFO:Checking environment
2024-07-10 10:34:00,280:INFO:python_version: 3.11.2
2024-07-10 10:34:00,280:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 10:34:00,280:INFO:machine: arm64
2024-07-10 10:34:00,280:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 10:34:00,280:INFO:Memory: svmem(total=8589934592, available=1561903104, percent=81.8, used=2964291584, free=29179904, active=1567244288, inactive=1524793344, wired=1397047296)
2024-07-10 10:34:00,280:INFO:Physical Core: 8
2024-07-10 10:34:00,280:INFO:Logical Core: 8
2024-07-10 10:34:00,280:INFO:Checking libraries
2024-07-10 10:34:00,280:INFO:System:
2024-07-10 10:34:00,280:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 10:34:00,280:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 10:34:00,280:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 10:34:00,280:INFO:PyCaret required dependencies:
2024-07-10 10:40:16,715:INFO:PyCaret ClassificationExperiment
2024-07-10 10:40:16,717:INFO:Logging name: clf-default-name
2024-07-10 10:40:16,717:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 10:40:16,717:INFO:version 3.3.2
2024-07-10 10:40:16,717:INFO:Initializing setup()
2024-07-10 10:40:16,717:INFO:self.USI: ebce
2024-07-10 10:40:16,717:INFO:self._variable_keys: {'target_param', 'USI', 'X_test', 'gpu_param', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance', 'exp_id', 'fold_groups_param', 'y', 'seed', 'is_multiclass', 'html_param', 'exp_name_log', 'pipeline', 'memory', '_ml_usecase', 'X_train', 'log_plots_param', 'y_train', 'n_jobs_param', 'y_test', 'idx', 'gpu_n_jobs_param', '_available_plots', 'X', 'data'}
2024-07-10 10:40:16,717:INFO:Checking environment
2024-07-10 10:40:16,717:INFO:python_version: 3.11.2
2024-07-10 10:40:16,717:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 10:40:16,717:INFO:machine: arm64
2024-07-10 10:40:16,717:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:16,717:INFO:Memory: svmem(total=8589934592, available=1513504768, percent=82.4, used=2648719360, free=71565312, active=1455341568, inactive=1435238400, wired=1193377792)
2024-07-10 10:40:16,717:INFO:Physical Core: 8
2024-07-10 10:40:16,717:INFO:Logical Core: 8
2024-07-10 10:40:16,717:INFO:Checking libraries
2024-07-10 10:40:16,717:INFO:System:
2024-07-10 10:40:16,717:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 10:40:16,717:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 10:40:16,717:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:16,717:INFO:PyCaret required dependencies:
2024-07-10 10:40:27,412:INFO:PyCaret ClassificationExperiment
2024-07-10 10:40:27,412:INFO:Logging name: clf-default-name
2024-07-10 10:40:27,413:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 10:40:27,413:INFO:version 3.3.2
2024-07-10 10:40:27,413:INFO:Initializing setup()
2024-07-10 10:40:27,413:INFO:self.USI: d36a
2024-07-10 10:40:27,413:INFO:self._variable_keys: {'target_param', 'USI', 'X_test', 'gpu_param', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance', 'exp_id', 'fold_groups_param', 'y', 'seed', 'is_multiclass', 'html_param', 'exp_name_log', 'pipeline', 'memory', '_ml_usecase', 'X_train', 'log_plots_param', 'y_train', 'n_jobs_param', 'y_test', 'idx', 'gpu_n_jobs_param', '_available_plots', 'X', 'data'}
2024-07-10 10:40:27,413:INFO:Checking environment
2024-07-10 10:40:27,413:INFO:python_version: 3.11.2
2024-07-10 10:40:27,413:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 10:40:27,413:INFO:machine: arm64
2024-07-10 10:40:27,413:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:27,413:INFO:Memory: svmem(total=8589934592, available=1405353984, percent=83.6, used=2716532736, free=22282240, active=1400487936, inactive=1372585984, wired=1316044800)
2024-07-10 10:40:27,413:INFO:Physical Core: 8
2024-07-10 10:40:27,413:INFO:Logical Core: 8
2024-07-10 10:40:27,413:INFO:Checking libraries
2024-07-10 10:40:27,413:INFO:System:
2024-07-10 10:40:27,413:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 10:40:27,413:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 10:40:27,413:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:27,413:INFO:PyCaret required dependencies:
2024-07-10 10:40:28,832:INFO:PyCaret ClassificationExperiment
2024-07-10 10:40:28,832:INFO:Logging name: clf-default-name
2024-07-10 10:40:28,832:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 10:40:28,832:INFO:version 3.3.2
2024-07-10 10:40:28,832:INFO:Initializing setup()
2024-07-10 10:40:28,832:INFO:self.USI: 5426
2024-07-10 10:40:28,832:INFO:self._variable_keys: {'target_param', 'USI', 'X_test', 'gpu_param', 'logging_param', 'fold_shuffle_param', 'fold_generator', 'fix_imbalance', 'exp_id', 'fold_groups_param', 'y', 'seed', 'is_multiclass', 'html_param', 'exp_name_log', 'pipeline', 'memory', '_ml_usecase', 'X_train', 'log_plots_param', 'y_train', 'n_jobs_param', 'y_test', 'idx', 'gpu_n_jobs_param', '_available_plots', 'X', 'data'}
2024-07-10 10:40:28,832:INFO:Checking environment
2024-07-10 10:40:28,832:INFO:python_version: 3.11.2
2024-07-10 10:40:28,832:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 10:40:28,832:INFO:machine: arm64
2024-07-10 10:40:28,832:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:28,832:INFO:Memory: svmem(total=8589934592, available=1421639680, percent=83.4, used=2677014528, free=33538048, active=1420443648, inactive=1382793216, wired=1256570880)
2024-07-10 10:40:28,832:INFO:Physical Core: 8
2024-07-10 10:40:28,832:INFO:Logical Core: 8
2024-07-10 10:40:28,832:INFO:Checking libraries
2024-07-10 10:40:28,832:INFO:System:
2024-07-10 10:40:28,832:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 10:40:28,832:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 10:40:28,832:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 10:40:28,832:INFO:PyCaret required dependencies:
2024-07-10 10:58:53,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:58:53,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:58:53,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:58:53,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-10 10:59:12,097:INFO:PyCaret ClassificationExperiment
2024-07-10 10:59:12,097:INFO:Logging name: clf-default-name
2024-07-10 10:59:12,097:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 10:59:12,097:INFO:version 3.3.2
2024-07-10 10:59:12,097:INFO:Initializing setup()
2024-07-10 10:59:12,097:INFO:self.USI: b45c
2024-07-10 10:59:12,097:INFO:self._variable_keys: {'y_train', 'data', 'logging_param', '_available_plots', 'fold_generator', 'y_test', '_ml_usecase', 'exp_name_log', 'X_train', 'pipeline', 'n_jobs_param', 'is_multiclass', 'seed', 'gpu_n_jobs_param', 'X_test', 'target_param', 'y', 'fold_groups_param', 'idx', 'log_plots_param', 'gpu_param', 'fix_imbalance', 'X', 'memory', 'USI', 'html_param', 'fold_shuffle_param', 'exp_id'}
2024-07-10 10:59:12,097:INFO:Checking environment
2024-07-10 10:59:12,097:INFO:python_version: 3.11.2
2024-07-10 10:59:12,097:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 10:59:12,097:INFO:machine: arm64
2024-07-10 10:59:12,097:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 10:59:12,097:INFO:Memory: svmem(total=8589934592, available=2021588992, percent=76.5, used=3413508096, free=60538880, active=1977368576, inactive=1959133184, wired=1436139520)
2024-07-10 10:59:12,097:INFO:Physical Core: 8
2024-07-10 10:59:12,097:INFO:Logical Core: 8
2024-07-10 10:59:12,097:INFO:Checking libraries
2024-07-10 10:59:12,097:INFO:System:
2024-07-10 10:59:12,097:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 10:59:12,097:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 10:59:12,097:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 10:59:12,097:INFO:PyCaret required dependencies:
2024-07-10 11:08:36,511:INFO:PyCaret ClassificationExperiment
2024-07-10 11:08:36,511:INFO:Logging name: clf-default-name
2024-07-10 11:08:36,511:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 11:08:36,511:INFO:version 3.3.2
2024-07-10 11:08:36,511:INFO:Initializing setup()
2024-07-10 11:08:36,511:INFO:self.USI: ae26
2024-07-10 11:08:36,511:INFO:self._variable_keys: {'y_train', 'data', 'logging_param', '_available_plots', 'fold_generator', 'y_test', '_ml_usecase', 'exp_name_log', 'X_train', 'pipeline', 'n_jobs_param', 'is_multiclass', 'seed', 'gpu_n_jobs_param', 'X_test', 'target_param', 'y', 'fold_groups_param', 'idx', 'log_plots_param', 'gpu_param', 'fix_imbalance', 'X', 'memory', 'USI', 'html_param', 'fold_shuffle_param', 'exp_id'}
2024-07-10 11:08:36,511:INFO:Checking environment
2024-07-10 11:08:36,511:INFO:python_version: 3.11.2
2024-07-10 11:08:36,511:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 11:08:36,511:INFO:machine: arm64
2024-07-10 11:08:36,511:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 11:08:36,512:INFO:Memory: svmem(total=8589934592, available=1677574144, percent=80.5, used=2901508096, free=63881216, active=1579761664, inactive=1610743808, wired=1321746432)
2024-07-10 11:08:36,512:INFO:Physical Core: 8
2024-07-10 11:08:36,512:INFO:Logical Core: 8
2024-07-10 11:08:36,512:INFO:Checking libraries
2024-07-10 11:08:36,512:INFO:System:
2024-07-10 11:08:36,512:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 11:08:36,512:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 11:08:36,512:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 11:08:36,512:INFO:PyCaret required dependencies:
2024-07-10 11:08:36,952:INFO:                 pip: 24.1.2
2024-07-10 11:08:36,952:INFO:          setuptools: 65.5.0
2024-07-10 11:08:36,952:INFO:             pycaret: 3.3.2
2024-07-10 11:08:36,952:INFO:             IPython: 8.26.0
2024-07-10 11:08:36,952:INFO:          ipywidgets: 8.1.3
2024-07-10 11:08:36,952:INFO:                tqdm: 4.66.4
2024-07-10 11:08:36,952:INFO:               numpy: 1.26.4
2024-07-10 11:08:36,952:INFO:              pandas: 2.1.4
2024-07-10 11:08:36,952:INFO:              jinja2: 3.1.4
2024-07-10 11:08:36,952:INFO:               scipy: 1.11.4
2024-07-10 11:08:36,952:INFO:              joblib: 1.3.2
2024-07-10 11:08:36,952:INFO:             sklearn: 1.4.2
2024-07-10 11:08:36,952:INFO:                pyod: 2.0.1
2024-07-10 11:08:36,952:INFO:            imblearn: 0.12.3
2024-07-10 11:08:36,952:INFO:   category_encoders: 2.6.3
2024-07-10 11:08:36,952:INFO:            lightgbm: 4.4.0
2024-07-10 11:08:36,952:INFO:               numba: 0.60.0
2024-07-10 11:08:36,952:INFO:            requests: 2.32.3
2024-07-10 11:08:36,952:INFO:          matplotlib: 3.7.5
2024-07-10 11:08:36,952:INFO:          scikitplot: 0.3.7
2024-07-10 11:08:36,952:INFO:         yellowbrick: 1.5
2024-07-10 11:08:36,952:INFO:              plotly: 5.22.0
2024-07-10 11:08:36,952:INFO:    plotly-resampler: Not installed
2024-07-10 11:08:36,952:INFO:             kaleido: 0.2.1
2024-07-10 11:08:36,952:INFO:           schemdraw: 0.15
2024-07-10 11:08:36,952:INFO:         statsmodels: 0.14.2
2024-07-10 11:08:36,952:INFO:              sktime: 0.26.0
2024-07-10 11:08:36,952:INFO:               tbats: 1.1.3
2024-07-10 11:08:36,952:INFO:            pmdarima: 2.0.4
2024-07-10 11:08:36,952:INFO:              psutil: 6.0.0
2024-07-10 11:08:36,952:INFO:          markupsafe: 2.1.5
2024-07-10 11:08:36,952:INFO:             pickle5: Not installed
2024-07-10 11:08:36,952:INFO:         cloudpickle: 3.0.0
2024-07-10 11:08:36,952:INFO:         deprecation: 2.1.0
2024-07-10 11:08:36,952:INFO:              xxhash: 3.4.1
2024-07-10 11:08:36,952:INFO:           wurlitzer: 3.1.1
2024-07-10 11:08:36,952:INFO:PyCaret optional dependencies:
2024-07-10 11:08:36,959:INFO:                shap: 0.44.1
2024-07-10 11:08:36,959:INFO:           interpret: 0.6.2
2024-07-10 11:08:36,960:INFO:                umap: 0.5.6
2024-07-10 11:08:36,960:INFO:     ydata_profiling: 4.8.3
2024-07-10 11:08:36,960:INFO:  explainerdashboard: 0.4.7
2024-07-10 11:08:36,960:INFO:             autoviz: Not installed
2024-07-10 11:08:36,960:INFO:           fairlearn: 0.7.0
2024-07-10 11:08:36,960:INFO:          deepchecks: Not installed
2024-07-10 11:08:36,960:INFO:             xgboost: Not installed
2024-07-10 11:08:36,960:INFO:            catboost: Not installed
2024-07-10 11:08:36,960:INFO:              kmodes: Not installed
2024-07-10 11:08:36,960:INFO:             mlxtend: Not installed
2024-07-10 11:08:36,960:INFO:       statsforecast: Not installed
2024-07-10 11:08:36,960:INFO:        tune_sklearn: Not installed
2024-07-10 11:08:36,960:INFO:                 ray: Not installed
2024-07-10 11:08:36,960:INFO:            hyperopt: Not installed
2024-07-10 11:08:36,960:INFO:              optuna: Not installed
2024-07-10 11:08:36,960:INFO:               skopt: Not installed
2024-07-10 11:08:36,960:INFO:              mlflow: Not installed
2024-07-10 11:08:36,960:INFO:              gradio: Not installed
2024-07-10 11:08:36,960:INFO:             fastapi: Not installed
2024-07-10 11:08:36,960:INFO:             uvicorn: Not installed
2024-07-10 11:08:36,960:INFO:              m2cgen: Not installed
2024-07-10 11:08:36,960:INFO:           evidently: Not installed
2024-07-10 11:08:36,960:INFO:               fugue: Not installed
2024-07-10 11:08:36,960:INFO:           streamlit: Not installed
2024-07-10 11:08:36,960:INFO:             prophet: Not installed
2024-07-10 11:08:36,960:INFO:None
2024-07-10 11:08:36,960:INFO:Set up data.
2024-07-10 11:08:36,965:INFO:Set up folding strategy.
2024-07-10 11:08:36,965:INFO:Set up train/test split.
2024-07-10 11:08:37,024:INFO:Set up index.
2024-07-10 11:08:37,024:INFO:Assigning column types.
2024-07-10 11:08:37,026:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-10 11:08:37,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,052:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,098:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-10 11:08:37,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:08:37,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,157:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-10 11:08:37,188:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,219:INFO:Preparing preprocessing pipeline...
2024-07-10 11:08:37,220:INFO:Set up label encoding.
2024-07-10 11:08:37,224:INFO:Set up simple imputation.
2024-07-10 11:08:37,224:INFO:Set up column name cleaning.
2024-07-10 11:08:37,244:INFO:Finished creating preprocessing pipeline.
2024-07-10 11:08:37,247:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/m7/8hm0ndhn7rs826pyx3mtxzl80000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indica...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-10 11:08:37,247:INFO:Creating final display dataframe.
2024-07-10 11:08:37,281:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     8147
1                        Target              set[string]
2                   Target type                   Binary
3                Target mapping  Benign: 0, Malicious: 1
4           Original data shape                (9072, 6)
5        Transformed data shape                (9072, 6)
6   Transformed train set shape                (6350, 6)
7    Transformed test set shape                (2722, 6)
8              Numeric features                        5
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     ae26
2024-07-10 11:08:37,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:08:37,349:INFO:setup() successfully completed in 0.84s...............
2024-07-10 11:08:37,349:INFO:Initializing compare_models()
2024-07-10 11:08:37,350:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-10 11:08:37,350:INFO:Checking exceptions
2024-07-10 11:08:37,352:INFO:Preparing display monitor
2024-07-10 11:08:37,411:INFO:Initializing Logistic Regression
2024-07-10 11:08:37,412:INFO:Total runtime is 1.4630953470865886e-05 minutes
2024-07-10 11:08:37,414:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:37,414:INFO:Initializing create_model()
2024-07-10 11:08:37,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:37,414:INFO:Checking exceptions
2024-07-10 11:08:37,414:INFO:Importing libraries
2024-07-10 11:08:37,414:INFO:Copying training dataset
2024-07-10 11:08:37,419:INFO:Defining folds
2024-07-10 11:08:37,419:INFO:Declaring metric variables
2024-07-10 11:08:37,421:INFO:Importing untrained model
2024-07-10 11:08:37,425:INFO:Logistic Regression Imported successfully
2024-07-10 11:08:37,429:INFO:Starting cross validation
2024-07-10 11:08:37,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:41,806:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,810:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,812:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,814:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,815:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,815:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,817:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,817:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,818:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,820:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,820:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,822:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,823:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,824:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,826:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,827:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,829:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,830:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,831:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,831:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,832:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,833:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,838:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,851:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,945:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,948:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,951:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,951:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,954:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,957:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:41,966:INFO:Calculating mean and std
2024-07-10 11:08:41,968:INFO:Creating metrics dataframe
2024-07-10 11:08:41,971:INFO:Uploading results into container
2024-07-10 11:08:41,971:INFO:Uploading model into container now
2024-07-10 11:08:41,972:INFO:_master_model_container: 1
2024-07-10 11:08:41,972:INFO:_display_container: 2
2024-07-10 11:08:41,972:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8147, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-10 11:08:41,972:INFO:create_model() successfully completed......................................
2024-07-10 11:08:42,143:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:42,143:INFO:Creating metrics dataframe
2024-07-10 11:08:42,147:INFO:Initializing K Neighbors Classifier
2024-07-10 11:08:42,147:INFO:Total runtime is 0.07893569866816202 minutes
2024-07-10 11:08:42,149:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:42,149:INFO:Initializing create_model()
2024-07-10 11:08:42,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:42,149:INFO:Checking exceptions
2024-07-10 11:08:42,149:INFO:Importing libraries
2024-07-10 11:08:42,150:INFO:Copying training dataset
2024-07-10 11:08:42,156:INFO:Defining folds
2024-07-10 11:08:42,156:INFO:Declaring metric variables
2024-07-10 11:08:42,158:INFO:Importing untrained model
2024-07-10 11:08:42,160:INFO:K Neighbors Classifier Imported successfully
2024-07-10 11:08:42,163:INFO:Starting cross validation
2024-07-10 11:08:42,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:42,275:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,276:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,278:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,278:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,282:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,290:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,299:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,306:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,307:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,308:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,308:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,311:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,313:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,314:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,315:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,317:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,320:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,324:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,328:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,330:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,333:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,340:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,343:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,346:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,361:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,364:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,365:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,366:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,368:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,371:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,378:INFO:Calculating mean and std
2024-07-10 11:08:42,379:INFO:Creating metrics dataframe
2024-07-10 11:08:42,380:INFO:Uploading results into container
2024-07-10 11:08:42,380:INFO:Uploading model into container now
2024-07-10 11:08:42,380:INFO:_master_model_container: 2
2024-07-10 11:08:42,380:INFO:_display_container: 2
2024-07-10 11:08:42,380:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-10 11:08:42,380:INFO:create_model() successfully completed......................................
2024-07-10 11:08:42,442:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:42,442:INFO:Creating metrics dataframe
2024-07-10 11:08:42,446:INFO:Initializing Naive Bayes
2024-07-10 11:08:42,446:INFO:Total runtime is 0.08391651312510172 minutes
2024-07-10 11:08:42,447:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:42,447:INFO:Initializing create_model()
2024-07-10 11:08:42,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:42,447:INFO:Checking exceptions
2024-07-10 11:08:42,447:INFO:Importing libraries
2024-07-10 11:08:42,447:INFO:Copying training dataset
2024-07-10 11:08:42,450:INFO:Defining folds
2024-07-10 11:08:42,450:INFO:Declaring metric variables
2024-07-10 11:08:42,451:INFO:Importing untrained model
2024-07-10 11:08:42,452:INFO:Naive Bayes Imported successfully
2024-07-10 11:08:42,456:INFO:Starting cross validation
2024-07-10 11:08:42,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:42,485:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,489:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,493:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,494:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,494:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,494:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,497:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,497:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,504:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,509:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,513:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,513:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,516:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,517:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,519:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,520:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,527:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,534:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,536:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,537:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,540:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,541:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,543:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,550:INFO:Calculating mean and std
2024-07-10 11:08:42,550:INFO:Creating metrics dataframe
2024-07-10 11:08:42,551:INFO:Uploading results into container
2024-07-10 11:08:42,551:INFO:Uploading model into container now
2024-07-10 11:08:42,552:INFO:_master_model_container: 3
2024-07-10 11:08:42,552:INFO:_display_container: 2
2024-07-10 11:08:42,552:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-10 11:08:42,552:INFO:create_model() successfully completed......................................
2024-07-10 11:08:42,612:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:42,612:INFO:Creating metrics dataframe
2024-07-10 11:08:42,615:INFO:Initializing Decision Tree Classifier
2024-07-10 11:08:42,615:INFO:Total runtime is 0.08673159678777058 minutes
2024-07-10 11:08:42,616:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:42,616:INFO:Initializing create_model()
2024-07-10 11:08:42,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:42,616:INFO:Checking exceptions
2024-07-10 11:08:42,616:INFO:Importing libraries
2024-07-10 11:08:42,616:INFO:Copying training dataset
2024-07-10 11:08:42,619:INFO:Defining folds
2024-07-10 11:08:42,619:INFO:Declaring metric variables
2024-07-10 11:08:42,620:INFO:Importing untrained model
2024-07-10 11:08:42,622:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:08:42,624:INFO:Starting cross validation
2024-07-10 11:08:42,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:42,662:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,664:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,665:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,666:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,667:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,668:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,669:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,669:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,670:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,673:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,674:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,681:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,684:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,686:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,696:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,696:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,699:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,699:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,700:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,701:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,701:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,703:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,705:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,706:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,707:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,710:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,718:INFO:Calculating mean and std
2024-07-10 11:08:42,719:INFO:Creating metrics dataframe
2024-07-10 11:08:42,720:INFO:Uploading results into container
2024-07-10 11:08:42,720:INFO:Uploading model into container now
2024-07-10 11:08:42,720:INFO:_master_model_container: 4
2024-07-10 11:08:42,720:INFO:_display_container: 2
2024-07-10 11:08:42,720:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best')
2024-07-10 11:08:42,720:INFO:create_model() successfully completed......................................
2024-07-10 11:08:42,779:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:42,779:INFO:Creating metrics dataframe
2024-07-10 11:08:42,782:INFO:Initializing SVM - Linear Kernel
2024-07-10 11:08:42,782:INFO:Total runtime is 0.08952070077260334 minutes
2024-07-10 11:08:42,784:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:42,784:INFO:Initializing create_model()
2024-07-10 11:08:42,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:42,784:INFO:Checking exceptions
2024-07-10 11:08:42,784:INFO:Importing libraries
2024-07-10 11:08:42,784:INFO:Copying training dataset
2024-07-10 11:08:42,787:INFO:Defining folds
2024-07-10 11:08:42,787:INFO:Declaring metric variables
2024-07-10 11:08:42,788:INFO:Importing untrained model
2024-07-10 11:08:42,789:INFO:SVM - Linear Kernel Imported successfully
2024-07-10 11:08:42,792:INFO:Starting cross validation
2024-07-10 11:08:42,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:42,834:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,837:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,844:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,864:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,865:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,866:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,869:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,874:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,876:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,879:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,880:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,881:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,882:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,883:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,884:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,885:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,886:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,888:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,896:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,899:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,902:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,906:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,909:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,911:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,917:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,919:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,922:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,929:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,932:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,934:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:42,948:INFO:Calculating mean and std
2024-07-10 11:08:42,948:INFO:Creating metrics dataframe
2024-07-10 11:08:42,949:INFO:Uploading results into container
2024-07-10 11:08:42,949:INFO:Uploading model into container now
2024-07-10 11:08:42,950:INFO:_master_model_container: 5
2024-07-10 11:08:42,950:INFO:_display_container: 2
2024-07-10 11:08:42,950:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8147, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-10 11:08:42,950:INFO:create_model() successfully completed......................................
2024-07-10 11:08:43,009:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:43,009:INFO:Creating metrics dataframe
2024-07-10 11:08:43,012:INFO:Initializing Ridge Classifier
2024-07-10 11:08:43,012:INFO:Total runtime is 0.09335406621297199 minutes
2024-07-10 11:08:43,014:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:43,014:INFO:Initializing create_model()
2024-07-10 11:08:43,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:43,014:INFO:Checking exceptions
2024-07-10 11:08:43,014:INFO:Importing libraries
2024-07-10 11:08:43,014:INFO:Copying training dataset
2024-07-10 11:08:43,017:INFO:Defining folds
2024-07-10 11:08:43,017:INFO:Declaring metric variables
2024-07-10 11:08:43,018:INFO:Importing untrained model
2024-07-10 11:08:43,019:INFO:Ridge Classifier Imported successfully
2024-07-10 11:08:43,021:INFO:Starting cross validation
2024-07-10 11:08:43,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:43,051:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,051:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,052:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,052:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,053:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,054:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,056:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,056:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,060:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,060:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,060:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,061:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,062:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,065:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,066:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,066:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,068:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,068:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,068:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,072:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,073:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,074:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,074:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,077:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,085:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,086:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,088:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,089:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,091:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,092:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,107:INFO:Calculating mean and std
2024-07-10 11:08:43,107:INFO:Creating metrics dataframe
2024-07-10 11:08:43,108:INFO:Uploading results into container
2024-07-10 11:08:43,108:INFO:Uploading model into container now
2024-07-10 11:08:43,108:INFO:_master_model_container: 6
2024-07-10 11:08:43,108:INFO:_display_container: 2
2024-07-10 11:08:43,109:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8147, solver='auto',
                tol=0.0001)
2024-07-10 11:08:43,109:INFO:create_model() successfully completed......................................
2024-07-10 11:08:43,166:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:43,166:INFO:Creating metrics dataframe
2024-07-10 11:08:43,170:INFO:Initializing Random Forest Classifier
2024-07-10 11:08:43,170:INFO:Total runtime is 0.09598569869995115 minutes
2024-07-10 11:08:43,172:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:43,172:INFO:Initializing create_model()
2024-07-10 11:08:43,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:43,172:INFO:Checking exceptions
2024-07-10 11:08:43,172:INFO:Importing libraries
2024-07-10 11:08:43,172:INFO:Copying training dataset
2024-07-10 11:08:43,175:INFO:Defining folds
2024-07-10 11:08:43,175:INFO:Declaring metric variables
2024-07-10 11:08:43,176:INFO:Importing untrained model
2024-07-10 11:08:43,178:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:08:43,181:INFO:Starting cross validation
2024-07-10 11:08:43,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:43,983:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,988:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,988:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,992:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:43,995:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,008:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,009:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,012:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,013:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,016:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,017:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,023:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,023:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,027:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,028:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,029:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,030:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,030:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,033:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,038:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,044:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,126:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,129:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,133:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,316:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,317:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,319:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,320:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,321:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,323:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,330:INFO:Calculating mean and std
2024-07-10 11:08:44,332:INFO:Creating metrics dataframe
2024-07-10 11:08:44,334:INFO:Uploading results into container
2024-07-10 11:08:44,334:INFO:Uploading model into container now
2024-07-10 11:08:44,335:INFO:_master_model_container: 7
2024-07-10 11:08:44,335:INFO:_display_container: 2
2024-07-10 11:08:44,335:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False)
2024-07-10 11:08:44,335:INFO:create_model() successfully completed......................................
2024-07-10 11:08:44,435:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:44,435:INFO:Creating metrics dataframe
2024-07-10 11:08:44,440:INFO:Initializing Quadratic Discriminant Analysis
2024-07-10 11:08:44,440:INFO:Total runtime is 0.11715292930603025 minutes
2024-07-10 11:08:44,442:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:44,442:INFO:Initializing create_model()
2024-07-10 11:08:44,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:44,442:INFO:Checking exceptions
2024-07-10 11:08:44,442:INFO:Importing libraries
2024-07-10 11:08:44,442:INFO:Copying training dataset
2024-07-10 11:08:44,445:INFO:Defining folds
2024-07-10 11:08:44,445:INFO:Declaring metric variables
2024-07-10 11:08:44,446:INFO:Importing untrained model
2024-07-10 11:08:44,448:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-10 11:08:44,450:INFO:Starting cross validation
2024-07-10 11:08:44,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:44,468:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,469:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,472:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,472:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,473:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,475:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,475:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,475:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,475:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,477:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,477:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,477:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,478:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,479:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,479:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,479:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,480:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,480:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,480:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,482:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,482:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,482:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,482:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,483:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,484:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,484:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,485:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,485:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,487:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,487:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,488:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,488:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,489:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,494:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,500:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,500:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,501:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,501:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,501:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,501:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,504:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,505:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,506:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,506:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,506:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,507:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,509:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,510:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,510:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,510:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,511:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,511:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,513:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,514:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,514:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,515:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,515:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,517:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,518:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,519:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,519:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,521:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,521:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,521:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,522:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,522:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,522:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,522:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,523:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:08:44,523:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,524:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,524:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,525:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,525:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,525:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,525:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,526:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,526:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:08:44,526:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:08:44,527:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,527:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:08:44,528:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,528:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,529:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,531:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,532:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:44,533:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,554:INFO:Calculating mean and std
2024-07-10 11:08:44,572:INFO:Creating metrics dataframe
2024-07-10 11:08:44,573:INFO:Uploading results into container
2024-07-10 11:08:44,573:INFO:Uploading model into container now
2024-07-10 11:08:44,574:INFO:_master_model_container: 8
2024-07-10 11:08:44,574:INFO:_display_container: 2
2024-07-10 11:08:44,574:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-10 11:08:44,574:INFO:create_model() successfully completed......................................
2024-07-10 11:08:44,643:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:44,643:INFO:Creating metrics dataframe
2024-07-10 11:08:44,646:INFO:Initializing Ada Boost Classifier
2024-07-10 11:08:44,646:INFO:Total runtime is 0.1205869674682617 minutes
2024-07-10 11:08:44,648:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:44,648:INFO:Initializing create_model()
2024-07-10 11:08:44,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:44,648:INFO:Checking exceptions
2024-07-10 11:08:44,648:INFO:Importing libraries
2024-07-10 11:08:44,648:INFO:Copying training dataset
2024-07-10 11:08:44,651:INFO:Defining folds
2024-07-10 11:08:44,651:INFO:Declaring metric variables
2024-07-10 11:08:44,652:INFO:Importing untrained model
2024-07-10 11:08:44,653:INFO:Ada Boost Classifier Imported successfully
2024-07-10 11:08:44,656:INFO:Starting cross validation
2024-07-10 11:08:44,656:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:44,672:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,677:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,684:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,703:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,703:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,918:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,920:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,921:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,923:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,924:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,925:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,927:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,928:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,931:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,931:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,934:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,937:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,941:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,942:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,947:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:08:44,947:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,948:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,950:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,951:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,954:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,955:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,958:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,958:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,964:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,966:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:44,969:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,056:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,059:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,059:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,061:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,062:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,065:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,074:INFO:Calculating mean and std
2024-07-10 11:08:45,075:INFO:Creating metrics dataframe
2024-07-10 11:08:45,076:INFO:Uploading results into container
2024-07-10 11:08:45,076:INFO:Uploading model into container now
2024-07-10 11:08:45,076:INFO:_master_model_container: 9
2024-07-10 11:08:45,076:INFO:_display_container: 2
2024-07-10 11:08:45,076:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8147)
2024-07-10 11:08:45,076:INFO:create_model() successfully completed......................................
2024-07-10 11:08:45,137:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:45,137:INFO:Creating metrics dataframe
2024-07-10 11:08:45,143:INFO:Initializing Gradient Boosting Classifier
2024-07-10 11:08:45,143:INFO:Total runtime is 0.12886304855346678 minutes
2024-07-10 11:08:45,144:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:45,144:INFO:Initializing create_model()
2024-07-10 11:08:45,144:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:45,144:INFO:Checking exceptions
2024-07-10 11:08:45,144:INFO:Importing libraries
2024-07-10 11:08:45,144:INFO:Copying training dataset
2024-07-10 11:08:45,146:INFO:Defining folds
2024-07-10 11:08:45,146:INFO:Declaring metric variables
2024-07-10 11:08:45,147:INFO:Importing untrained model
2024-07-10 11:08:45,148:INFO:Gradient Boosting Classifier Imported successfully
2024-07-10 11:08:45,151:INFO:Starting cross validation
2024-07-10 11:08:45,151:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:45,708:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,719:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,722:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,750:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,752:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,755:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,758:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,760:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,761:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,778:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,781:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,791:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,791:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,794:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,795:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,796:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,799:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,799:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,801:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,803:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,805:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,821:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,824:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:45,826:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,098:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,101:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,103:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,123:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,125:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,128:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,142:INFO:Calculating mean and std
2024-07-10 11:08:46,142:INFO:Creating metrics dataframe
2024-07-10 11:08:46,143:INFO:Uploading results into container
2024-07-10 11:08:46,143:INFO:Uploading model into container now
2024-07-10 11:08:46,143:INFO:_master_model_container: 10
2024-07-10 11:08:46,143:INFO:_display_container: 2
2024-07-10 11:08:46,144:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8147, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-10 11:08:46,144:INFO:create_model() successfully completed......................................
2024-07-10 11:08:46,211:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:46,211:INFO:Creating metrics dataframe
2024-07-10 11:08:46,215:INFO:Initializing Linear Discriminant Analysis
2024-07-10 11:08:46,215:INFO:Total runtime is 0.14673503239949542 minutes
2024-07-10 11:08:46,217:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:46,217:INFO:Initializing create_model()
2024-07-10 11:08:46,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:46,217:INFO:Checking exceptions
2024-07-10 11:08:46,217:INFO:Importing libraries
2024-07-10 11:08:46,217:INFO:Copying training dataset
2024-07-10 11:08:46,219:INFO:Defining folds
2024-07-10 11:08:46,220:INFO:Declaring metric variables
2024-07-10 11:08:46,221:INFO:Importing untrained model
2024-07-10 11:08:46,222:INFO:Linear Discriminant Analysis Imported successfully
2024-07-10 11:08:46,225:INFO:Starting cross validation
2024-07-10 11:08:46,225:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:46,248:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,249:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,251:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,252:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,252:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,254:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,255:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,258:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,261:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,262:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,265:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,266:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,268:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,269:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,269:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,273:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,275:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,278:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,279:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,282:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,282:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,284:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,284:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,287:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,287:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,290:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,290:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,292:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,292:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,295:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,308:INFO:Calculating mean and std
2024-07-10 11:08:46,308:INFO:Creating metrics dataframe
2024-07-10 11:08:46,309:INFO:Uploading results into container
2024-07-10 11:08:46,309:INFO:Uploading model into container now
2024-07-10 11:08:46,309:INFO:_master_model_container: 11
2024-07-10 11:08:46,309:INFO:_display_container: 2
2024-07-10 11:08:46,309:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-10 11:08:46,309:INFO:create_model() successfully completed......................................
2024-07-10 11:08:46,368:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:46,369:INFO:Creating metrics dataframe
2024-07-10 11:08:46,374:INFO:Initializing Extra Trees Classifier
2024-07-10 11:08:46,374:INFO:Total runtime is 0.14938171307245887 minutes
2024-07-10 11:08:46,375:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:46,375:INFO:Initializing create_model()
2024-07-10 11:08:46,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:46,375:INFO:Checking exceptions
2024-07-10 11:08:46,375:INFO:Importing libraries
2024-07-10 11:08:46,375:INFO:Copying training dataset
2024-07-10 11:08:46,378:INFO:Defining folds
2024-07-10 11:08:46,378:INFO:Declaring metric variables
2024-07-10 11:08:46,379:INFO:Importing untrained model
2024-07-10 11:08:46,380:INFO:Extra Trees Classifier Imported successfully
2024-07-10 11:08:46,382:INFO:Starting cross validation
2024-07-10 11:08:46,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:46,833:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,836:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,839:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,908:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,911:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,914:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,961:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,963:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,963:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,965:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,966:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,967:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,968:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,970:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,971:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,974:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,976:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,976:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,976:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,979:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:46,982:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,019:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,022:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,025:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,079:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,082:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,084:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,102:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,105:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,108:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:47,114:INFO:Calculating mean and std
2024-07-10 11:08:47,116:INFO:Creating metrics dataframe
2024-07-10 11:08:47,118:INFO:Uploading results into container
2024-07-10 11:08:47,118:INFO:Uploading model into container now
2024-07-10 11:08:47,119:INFO:_master_model_container: 12
2024-07-10 11:08:47,119:INFO:_display_container: 2
2024-07-10 11:08:47,119:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8147, verbose=0,
                     warm_start=False)
2024-07-10 11:08:47,119:INFO:create_model() successfully completed......................................
2024-07-10 11:08:47,214:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:47,214:INFO:Creating metrics dataframe
2024-07-10 11:08:47,219:INFO:Initializing Light Gradient Boosting Machine
2024-07-10 11:08:47,219:INFO:Total runtime is 0.16346643368403113 minutes
2024-07-10 11:08:47,221:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:47,221:INFO:Initializing create_model()
2024-07-10 11:08:47,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:47,221:INFO:Checking exceptions
2024-07-10 11:08:47,221:INFO:Importing libraries
2024-07-10 11:08:47,221:INFO:Copying training dataset
2024-07-10 11:08:47,225:INFO:Defining folds
2024-07-10 11:08:47,225:INFO:Declaring metric variables
2024-07-10 11:08:47,227:INFO:Importing untrained model
2024-07-10 11:08:47,230:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-10 11:08:47,232:INFO:Starting cross validation
2024-07-10 11:08:47,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:49,354:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,377:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,385:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,391:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,418:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,435:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,435:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,451:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,477:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,814:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,833:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,850:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,916:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,919:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,922:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,923:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,923:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,931:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,931:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,938:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,938:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,963:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,966:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:49,971:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,162:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,165:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,168:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,286:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,289:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,291:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,299:INFO:Calculating mean and std
2024-07-10 11:08:50,300:INFO:Creating metrics dataframe
2024-07-10 11:08:50,301:INFO:Uploading results into container
2024-07-10 11:08:50,301:INFO:Uploading model into container now
2024-07-10 11:08:50,301:INFO:_master_model_container: 13
2024-07-10 11:08:50,301:INFO:_display_container: 2
2024-07-10 11:08:50,301:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8147, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-10 11:08:50,301:INFO:create_model() successfully completed......................................
2024-07-10 11:08:50,364:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:50,365:INFO:Creating metrics dataframe
2024-07-10 11:08:50,370:INFO:Initializing Dummy Classifier
2024-07-10 11:08:50,370:INFO:Total runtime is 0.21599209705988562 minutes
2024-07-10 11:08:50,373:INFO:SubProcess create_model() called ==================================
2024-07-10 11:08:50,373:INFO:Initializing create_model()
2024-07-10 11:08:50,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x314f5d5d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:50,373:INFO:Checking exceptions
2024-07-10 11:08:50,373:INFO:Importing libraries
2024-07-10 11:08:50,373:INFO:Copying training dataset
2024-07-10 11:08:50,375:INFO:Defining folds
2024-07-10 11:08:50,375:INFO:Declaring metric variables
2024-07-10 11:08:50,376:INFO:Importing untrained model
2024-07-10 11:08:50,378:INFO:Dummy Classifier Imported successfully
2024-07-10 11:08:50,380:INFO:Starting cross validation
2024-07-10 11:08:50,381:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:08:50,406:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,410:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,410:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,411:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,412:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,412:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,413:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,414:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,414:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,416:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,416:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,417:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,418:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,420:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,422:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,424:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,426:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,429:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,431:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,432:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,432:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,435:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,436:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,438:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,439:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,439:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,440:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,440:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,442:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,442:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,442:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,443:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,443:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,444:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,445:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,445:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,445:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,448:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,449:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:08:50,450:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:08:50,456:INFO:Calculating mean and std
2024-07-10 11:08:50,456:INFO:Creating metrics dataframe
2024-07-10 11:08:50,457:INFO:Uploading results into container
2024-07-10 11:08:50,457:INFO:Uploading model into container now
2024-07-10 11:08:50,457:INFO:_master_model_container: 14
2024-07-10 11:08:50,457:INFO:_display_container: 2
2024-07-10 11:08:50,457:INFO:DummyClassifier(constant=None, random_state=8147, strategy='prior')
2024-07-10 11:08:50,457:INFO:create_model() successfully completed......................................
2024-07-10 11:08:50,517:INFO:SubProcess create_model() end ==================================
2024-07-10 11:08:50,517:INFO:Creating metrics dataframe
2024-07-10 11:08:50,525:INFO:Initializing create_model()
2024-07-10 11:08:50,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:50,525:INFO:Checking exceptions
2024-07-10 11:08:50,526:INFO:Importing libraries
2024-07-10 11:08:50,526:INFO:Copying training dataset
2024-07-10 11:08:50,528:INFO:Defining folds
2024-07-10 11:08:50,528:INFO:Declaring metric variables
2024-07-10 11:08:50,528:INFO:Importing untrained model
2024-07-10 11:08:50,528:INFO:Declaring custom model
2024-07-10 11:08:50,529:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:08:50,529:INFO:Cross validation set to False
2024-07-10 11:08:50,529:INFO:Fitting Model
2024-07-10 11:08:50,543:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best')
2024-07-10 11:08:50,543:INFO:create_model() successfully completed......................................
2024-07-10 11:08:50,608:INFO:Initializing create_model()
2024-07-10 11:08:50,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:50,608:INFO:Checking exceptions
2024-07-10 11:08:50,609:INFO:Importing libraries
2024-07-10 11:08:50,609:INFO:Copying training dataset
2024-07-10 11:08:50,611:INFO:Defining folds
2024-07-10 11:08:50,611:INFO:Declaring metric variables
2024-07-10 11:08:50,611:INFO:Importing untrained model
2024-07-10 11:08:50,611:INFO:Declaring custom model
2024-07-10 11:08:50,612:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:08:50,612:INFO:Cross validation set to False
2024-07-10 11:08:50,612:INFO:Fitting Model
2024-07-10 11:08:50,771:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False)
2024-07-10 11:08:50,771:INFO:create_model() successfully completed......................................
2024-07-10 11:08:50,841:INFO:_master_model_container: 14
2024-07-10 11:08:50,842:INFO:_display_container: 2
2024-07-10 11:08:50,842:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False)]
2024-07-10 11:08:50,842:INFO:compare_models() successfully completed......................................
2024-07-10 11:08:50,843:INFO:Initializing finalize_model()
2024-07-10 11:08:50,843:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-10 11:08:50,843:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best')
2024-07-10 11:08:50,854:INFO:Initializing create_model()
2024-07-10 11:08:50,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8147, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:50,856:INFO:Checking exceptions
2024-07-10 11:08:50,860:INFO:Importing libraries
2024-07-10 11:08:50,862:INFO:Copying training dataset
2024-07-10 11:08:50,866:INFO:Defining folds
2024-07-10 11:08:50,866:INFO:Declaring metric variables
2024-07-10 11:08:50,866:INFO:Importing untrained model
2024-07-10 11:08:50,866:INFO:Declaring custom model
2024-07-10 11:08:50,866:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:08:50,868:INFO:Cross validation set to False
2024-07-10 11:08:50,868:INFO:Fitting Model
2024-07-10 11:08:50,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False)
2024-07-10 11:08:50,955:INFO:create_model() successfully completed......................................
2024-07-10 11:08:51,014:INFO:_master_model_container: 14
2024-07-10 11:08:51,014:INFO:_display_container: 2
2024-07-10 11:08:51,016:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False)
2024-07-10 11:08:51,016:INFO:finalize_model() successfully completed......................................
2024-07-10 11:08:51,076:INFO:Initializing predict_model()
2024-07-10 11:08:51,077:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30f0e6b60>)
2024-07-10 11:08:51,077:INFO:Checking exceptions
2024-07-10 11:08:51,077:INFO:Preloading libraries
2024-07-10 11:08:51,202:INFO:Initializing finalize_model()
2024-07-10 11:08:51,202:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-10 11:08:51,202:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False)
2024-07-10 11:08:51,204:INFO:Initializing create_model()
2024-07-10 11:08:51,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8147, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:08:51,204:INFO:Checking exceptions
2024-07-10 11:08:51,205:INFO:Importing libraries
2024-07-10 11:08:51,205:INFO:Copying training dataset
2024-07-10 11:08:51,205:INFO:Defining folds
2024-07-10 11:08:51,205:INFO:Declaring metric variables
2024-07-10 11:08:51,205:INFO:Importing untrained model
2024-07-10 11:08:51,205:INFO:Declaring custom model
2024-07-10 11:08:51,205:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:08:51,206:INFO:Cross validation set to False
2024-07-10 11:08:51,206:INFO:Fitting Model
2024-07-10 11:08:51,427:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8147, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-10 11:08:51,427:INFO:create_model() successfully completed......................................
2024-07-10 11:08:51,488:INFO:_master_model_container: 14
2024-07-10 11:08:51,488:INFO:_display_container: 3
2024-07-10 11:08:51,491:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8147, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-10 11:08:51,491:INFO:finalize_model() successfully completed......................................
2024-07-10 11:08:51,550:INFO:Initializing predict_model()
2024-07-10 11:08:51,550:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8147, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x169956840>)
2024-07-10 11:08:51,550:INFO:Checking exceptions
2024-07-10 11:08:51,550:INFO:Preloading libraries
2024-07-10 11:09:10,223:INFO:Initializing plot_model()
2024-07-10 11:09:10,224:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-10 11:09:10,224:INFO:Checking exceptions
2024-07-10 11:09:10,229:INFO:Preloading libraries
2024-07-10 11:09:10,230:INFO:Copying training dataset
2024-07-10 11:09:10,230:INFO:Plot type: boundary
2024-07-10 11:09:10,265:INFO:Fitting StandardScaler()
2024-07-10 11:09:10,267:INFO:Fitting PCA()
2024-07-10 11:09:10,450:INFO:Fitting Model
2024-07-10 11:09:11,041:INFO:Visual Rendered Successfully
2024-07-10 11:09:11,125:INFO:plot_model() successfully completed......................................
2024-07-10 11:09:11,128:INFO:Initializing plot_model()
2024-07-10 11:09:11,128:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=8147, verbose=0,
                                        warm_start=False))],
         verbose=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-07-10 11:09:11,128:INFO:Checking exceptions
2024-07-10 11:09:11,144:INFO:Preloading libraries
2024-07-10 11:09:11,198:INFO:Copying training dataset
2024-07-10 11:09:11,198:INFO:Plot type: boundary
2024-07-10 11:09:11,225:INFO:Fitting StandardScaler()
2024-07-10 11:09:11,226:INFO:Fitting PCA()
2024-07-10 11:09:11,391:INFO:Fitting Model
2024-07-10 11:09:12,163:INFO:Visual Rendered Successfully
2024-07-10 11:09:12,251:INFO:plot_model() successfully completed......................................
2024-07-10 11:09:19,072:INFO:Initializing save_model()
2024-07-10 11:09:19,072:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False), model_name=next_best_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/m7/8hm0ndhn7rs826pyx3mtxzl80000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indica...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-10 11:09:19,072:INFO:Adding model into prep_pipe
2024-07-10 11:09:19,072:WARNING:Only Model saved as it was a pipeline.
2024-07-10 11:09:19,076:INFO:next_best_model.pkl saved in current working directory
2024-07-10 11:09:19,080:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False)
2024-07-10 11:09:19,080:INFO:save_model() successfully completed......................................
2024-07-10 11:09:19,152:INFO:Initializing load_model()
2024-07-10 11:09:19,152:INFO:load_model(model_name=next_best_model, platform=None, authentication=None, verbose=True)
2024-07-10 11:09:19,156:INFO:Initializing predict_model()
2024-07-10 11:09:19,156:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x311d012d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/m7/8hm0ndhn7rs826pyx3mtxzl80000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indica...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=8147,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30f497240>)
2024-07-10 11:09:19,156:INFO:Checking exceptions
2024-07-10 11:09:19,156:INFO:Preloading libraries
2024-07-10 11:10:26,838:INFO:PyCaret ClassificationExperiment
2024-07-10 11:10:26,838:INFO:Logging name: clf-default-name
2024-07-10 11:10:26,838:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-10 11:10:26,838:INFO:version 3.3.2
2024-07-10 11:10:26,838:INFO:Initializing setup()
2024-07-10 11:10:26,838:INFO:self.USI: 103f
2024-07-10 11:10:26,838:INFO:self._variable_keys: {'y_train', 'data', 'logging_param', '_available_plots', 'fold_generator', 'y_test', '_ml_usecase', 'exp_name_log', 'X_train', 'pipeline', 'n_jobs_param', 'is_multiclass', 'seed', 'gpu_n_jobs_param', 'X_test', 'target_param', 'y', 'fold_groups_param', 'idx', 'log_plots_param', 'gpu_param', 'fix_imbalance', 'X', 'memory', 'USI', 'html_param', 'fold_shuffle_param', 'exp_id'}
2024-07-10 11:10:26,838:INFO:Checking environment
2024-07-10 11:10:26,838:INFO:python_version: 3.11.2
2024-07-10 11:10:26,838:INFO:python_build: ('v3.11.2:878ead1ac1', 'Feb  7 2023 10:02:41')
2024-07-10 11:10:26,838:INFO:machine: arm64
2024-07-10 11:10:26,838:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-10 11:10:26,841:INFO:Memory: svmem(total=8589934592, available=1708457984, percent=80.1, used=2998714368, free=22102016, active=1702084608, inactive=1685372928, wired=1296629760)
2024-07-10 11:10:26,841:INFO:Physical Core: 8
2024-07-10 11:10:26,841:INFO:Logical Core: 8
2024-07-10 11:10:26,841:INFO:Checking libraries
2024-07-10 11:10:26,841:INFO:System:
2024-07-10 11:10:26,841:INFO:    python: 3.11.2 (v3.11.2:878ead1ac1, Feb  7 2023, 10:02:41) [Clang 13.0.0 (clang-1300.0.29.30)]
2024-07-10 11:10:26,841:INFO:executable: /Users/henrynonso/Desktop/threat_detection_done/venv/bin/python
2024-07-10 11:10:26,841:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-10 11:10:26,841:INFO:PyCaret required dependencies:
2024-07-10 11:10:26,841:INFO:                 pip: 24.1.2
2024-07-10 11:10:26,842:INFO:          setuptools: 65.5.0
2024-07-10 11:10:26,842:INFO:             pycaret: 3.3.2
2024-07-10 11:10:26,842:INFO:             IPython: 8.26.0
2024-07-10 11:10:26,842:INFO:          ipywidgets: 8.1.3
2024-07-10 11:10:26,842:INFO:                tqdm: 4.66.4
2024-07-10 11:10:26,842:INFO:               numpy: 1.26.4
2024-07-10 11:10:26,842:INFO:              pandas: 2.1.4
2024-07-10 11:10:26,842:INFO:              jinja2: 3.1.4
2024-07-10 11:10:26,842:INFO:               scipy: 1.11.4
2024-07-10 11:10:26,842:INFO:              joblib: 1.3.2
2024-07-10 11:10:26,842:INFO:             sklearn: 1.4.2
2024-07-10 11:10:26,842:INFO:                pyod: 2.0.1
2024-07-10 11:10:26,842:INFO:            imblearn: 0.12.3
2024-07-10 11:10:26,842:INFO:   category_encoders: 2.6.3
2024-07-10 11:10:26,842:INFO:            lightgbm: 4.4.0
2024-07-10 11:10:26,842:INFO:               numba: 0.60.0
2024-07-10 11:10:26,842:INFO:            requests: 2.32.3
2024-07-10 11:10:26,842:INFO:          matplotlib: 3.7.5
2024-07-10 11:10:26,846:INFO:          scikitplot: 0.3.7
2024-07-10 11:10:26,846:INFO:         yellowbrick: 1.5
2024-07-10 11:10:26,846:INFO:              plotly: 5.22.0
2024-07-10 11:10:26,846:INFO:    plotly-resampler: Not installed
2024-07-10 11:10:26,846:INFO:             kaleido: 0.2.1
2024-07-10 11:10:26,846:INFO:           schemdraw: 0.15
2024-07-10 11:10:26,846:INFO:         statsmodels: 0.14.2
2024-07-10 11:10:26,846:INFO:              sktime: 0.26.0
2024-07-10 11:10:26,846:INFO:               tbats: 1.1.3
2024-07-10 11:10:26,846:INFO:            pmdarima: 2.0.4
2024-07-10 11:10:26,846:INFO:              psutil: 6.0.0
2024-07-10 11:10:26,846:INFO:          markupsafe: 2.1.5
2024-07-10 11:10:26,846:INFO:             pickle5: Not installed
2024-07-10 11:10:26,846:INFO:         cloudpickle: 3.0.0
2024-07-10 11:10:26,846:INFO:         deprecation: 2.1.0
2024-07-10 11:10:26,846:INFO:              xxhash: 3.4.1
2024-07-10 11:10:26,846:INFO:           wurlitzer: 3.1.1
2024-07-10 11:10:26,846:INFO:PyCaret optional dependencies:
2024-07-10 11:10:26,847:INFO:                shap: 0.44.1
2024-07-10 11:10:26,847:INFO:           interpret: 0.6.2
2024-07-10 11:10:26,847:INFO:                umap: 0.5.6
2024-07-10 11:10:26,847:INFO:     ydata_profiling: 4.8.3
2024-07-10 11:10:26,847:INFO:  explainerdashboard: 0.4.7
2024-07-10 11:10:26,847:INFO:             autoviz: Not installed
2024-07-10 11:10:26,847:INFO:           fairlearn: 0.7.0
2024-07-10 11:10:26,847:INFO:          deepchecks: Not installed
2024-07-10 11:10:26,847:INFO:             xgboost: Not installed
2024-07-10 11:10:26,847:INFO:            catboost: Not installed
2024-07-10 11:10:26,847:INFO:              kmodes: Not installed
2024-07-10 11:10:26,847:INFO:             mlxtend: Not installed
2024-07-10 11:10:26,848:INFO:       statsforecast: Not installed
2024-07-10 11:10:26,848:INFO:        tune_sklearn: Not installed
2024-07-10 11:10:26,848:INFO:                 ray: Not installed
2024-07-10 11:10:26,848:INFO:            hyperopt: Not installed
2024-07-10 11:10:26,848:INFO:              optuna: Not installed
2024-07-10 11:10:26,848:INFO:               skopt: Not installed
2024-07-10 11:10:26,848:INFO:              mlflow: Not installed
2024-07-10 11:10:26,848:INFO:              gradio: Not installed
2024-07-10 11:10:26,848:INFO:             fastapi: Not installed
2024-07-10 11:10:26,848:INFO:             uvicorn: Not installed
2024-07-10 11:10:26,848:INFO:              m2cgen: Not installed
2024-07-10 11:10:26,848:INFO:           evidently: Not installed
2024-07-10 11:10:26,848:INFO:               fugue: Not installed
2024-07-10 11:10:26,848:INFO:           streamlit: Not installed
2024-07-10 11:10:26,848:INFO:             prophet: Not installed
2024-07-10 11:10:26,848:INFO:None
2024-07-10 11:10:26,848:INFO:Set up data.
2024-07-10 11:10:26,854:INFO:Set up folding strategy.
2024-07-10 11:10:26,854:INFO:Set up train/test split.
2024-07-10 11:10:26,862:INFO:Set up index.
2024-07-10 11:10:26,862:INFO:Assigning column types.
2024-07-10 11:10:26,864:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-10 11:10:26,886:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,934:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-10 11:10:26,953:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-10 11:10:26,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:26,994:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-10 11:10:27,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,054:INFO:Preparing preprocessing pipeline...
2024-07-10 11:10:27,054:INFO:Set up label encoding.
2024-07-10 11:10:27,054:INFO:Set up simple imputation.
2024-07-10 11:10:27,055:INFO:Set up column name cleaning.
2024-07-10 11:10:27,066:INFO:Finished creating preprocessing pipeline.
2024-07-10 11:10:27,067:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/m7/8hm0ndhn7rs826pyx3mtxzl80000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indica...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-10 11:10:27,067:INFO:Creating final display dataframe.
2024-07-10 11:10:27,100:INFO:Setup _display_container:                     Description                    Value
0                    Session id                     1427
1                        Target              set[string]
2                   Target type                   Binary
3                Target mapping  Benign: 0, Malicious: 1
4           Original data shape                (9072, 6)
5        Transformed data shape                (9072, 6)
6   Transformed train set shape                (6350, 6)
7    Transformed test set shape                (2722, 6)
8              Numeric features                        5
9                    Preprocess                     True
10              Imputation type                   simple
11           Numeric imputation                     mean
12       Categorical imputation                     mode
13               Fold Generator          StratifiedKFold
14                  Fold Number                       10
15                     CPU Jobs                       -1
16                      Use GPU                    False
17               Log Experiment                    False
18              Experiment Name         clf-default-name
19                          USI                     103f
2024-07-10 11:10:27,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,164:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-10 11:10:27,165:INFO:setup() successfully completed in 0.33s...............
2024-07-10 11:10:27,166:INFO:Initializing compare_models()
2024-07-10 11:10:27,166:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-07-10 11:10:27,166:INFO:Checking exceptions
2024-07-10 11:10:27,168:INFO:Preparing display monitor
2024-07-10 11:10:27,178:INFO:Initializing Logistic Regression
2024-07-10 11:10:27,178:INFO:Total runtime is 2.7298927307128905e-06 minutes
2024-07-10 11:10:27,180:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:27,180:INFO:Initializing create_model()
2024-07-10 11:10:27,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:27,180:INFO:Checking exceptions
2024-07-10 11:10:27,181:INFO:Importing libraries
2024-07-10 11:10:27,181:INFO:Copying training dataset
2024-07-10 11:10:27,184:INFO:Defining folds
2024-07-10 11:10:27,184:INFO:Declaring metric variables
2024-07-10 11:10:27,186:INFO:Importing untrained model
2024-07-10 11:10:27,188:INFO:Logistic Regression Imported successfully
2024-07-10 11:10:27,190:INFO:Starting cross validation
2024-07-10 11:10:27,191:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:27,274:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,284:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,287:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,303:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,309:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,312:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,317:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,320:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,322:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,324:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,329:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,332:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,335:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,337:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,338:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,346:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,348:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,351:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,357:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,359:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,361:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,362:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,363:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,364:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,365:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,365:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,366:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,368:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,369:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,371:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,387:INFO:Calculating mean and std
2024-07-10 11:10:27,387:INFO:Creating metrics dataframe
2024-07-10 11:10:27,389:INFO:Uploading results into container
2024-07-10 11:10:27,389:INFO:Uploading model into container now
2024-07-10 11:10:27,390:INFO:_master_model_container: 1
2024-07-10 11:10:27,390:INFO:_display_container: 2
2024-07-10 11:10:27,390:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1427, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-10 11:10:27,390:INFO:create_model() successfully completed......................................
2024-07-10 11:10:27,475:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:27,475:INFO:Creating metrics dataframe
2024-07-10 11:10:27,478:INFO:Initializing K Neighbors Classifier
2024-07-10 11:10:27,478:INFO:Total runtime is 0.0049965143203735355 minutes
2024-07-10 11:10:27,479:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:27,479:INFO:Initializing create_model()
2024-07-10 11:10:27,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:27,479:INFO:Checking exceptions
2024-07-10 11:10:27,479:INFO:Importing libraries
2024-07-10 11:10:27,479:INFO:Copying training dataset
2024-07-10 11:10:27,482:INFO:Defining folds
2024-07-10 11:10:27,482:INFO:Declaring metric variables
2024-07-10 11:10:27,483:INFO:Importing untrained model
2024-07-10 11:10:27,484:INFO:K Neighbors Classifier Imported successfully
2024-07-10 11:10:27,487:INFO:Starting cross validation
2024-07-10 11:10:27,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:27,594:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,596:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,597:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,599:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,602:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,602:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,603:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,606:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,606:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,608:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,609:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,615:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,618:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,618:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,625:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,625:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,625:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,628:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,628:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,630:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,630:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,658:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,660:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,662:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,664:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,665:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,681:INFO:Calculating mean and std
2024-07-10 11:10:27,681:INFO:Creating metrics dataframe
2024-07-10 11:10:27,682:INFO:Uploading results into container
2024-07-10 11:10:27,682:INFO:Uploading model into container now
2024-07-10 11:10:27,683:INFO:_master_model_container: 2
2024-07-10 11:10:27,683:INFO:_display_container: 2
2024-07-10 11:10:27,683:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-10 11:10:27,683:INFO:create_model() successfully completed......................................
2024-07-10 11:10:27,742:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:27,742:INFO:Creating metrics dataframe
2024-07-10 11:10:27,745:INFO:Initializing Naive Bayes
2024-07-10 11:10:27,745:INFO:Total runtime is 0.009449764092763265 minutes
2024-07-10 11:10:27,746:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:27,746:INFO:Initializing create_model()
2024-07-10 11:10:27,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:27,746:INFO:Checking exceptions
2024-07-10 11:10:27,746:INFO:Importing libraries
2024-07-10 11:10:27,747:INFO:Copying training dataset
2024-07-10 11:10:27,749:INFO:Defining folds
2024-07-10 11:10:27,749:INFO:Declaring metric variables
2024-07-10 11:10:27,750:INFO:Importing untrained model
2024-07-10 11:10:27,751:INFO:Naive Bayes Imported successfully
2024-07-10 11:10:27,754:INFO:Starting cross validation
2024-07-10 11:10:27,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:27,775:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,777:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,777:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,778:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,780:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,781:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,782:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,783:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,783:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,784:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,788:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,789:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,791:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,793:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,796:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,798:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,800:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,800:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,802:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,804:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,804:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,806:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,806:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,807:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,809:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,809:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,811:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,812:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,814:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,817:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,822:INFO:Calculating mean and std
2024-07-10 11:10:27,822:INFO:Creating metrics dataframe
2024-07-10 11:10:27,823:INFO:Uploading results into container
2024-07-10 11:10:27,823:INFO:Uploading model into container now
2024-07-10 11:10:27,823:INFO:_master_model_container: 3
2024-07-10 11:10:27,823:INFO:_display_container: 2
2024-07-10 11:10:27,823:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-10 11:10:27,823:INFO:create_model() successfully completed......................................
2024-07-10 11:10:27,881:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:27,881:INFO:Creating metrics dataframe
2024-07-10 11:10:27,884:INFO:Initializing Decision Tree Classifier
2024-07-10 11:10:27,884:INFO:Total runtime is 0.011763230959574381 minutes
2024-07-10 11:10:27,885:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:27,885:INFO:Initializing create_model()
2024-07-10 11:10:27,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:27,885:INFO:Checking exceptions
2024-07-10 11:10:27,885:INFO:Importing libraries
2024-07-10 11:10:27,885:INFO:Copying training dataset
2024-07-10 11:10:27,888:INFO:Defining folds
2024-07-10 11:10:27,888:INFO:Declaring metric variables
2024-07-10 11:10:27,889:INFO:Importing untrained model
2024-07-10 11:10:27,890:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:10:27,893:INFO:Starting cross validation
2024-07-10 11:10:27,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:27,928:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,929:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,931:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,932:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,932:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,934:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,934:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,935:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,936:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,939:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,942:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,942:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,945:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,947:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,947:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,948:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,949:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,950:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,954:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,954:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,958:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,960:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,963:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,966:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,967:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,969:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,970:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,972:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,973:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,974:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:27,980:INFO:Calculating mean and std
2024-07-10 11:10:27,980:INFO:Creating metrics dataframe
2024-07-10 11:10:27,980:INFO:Uploading results into container
2024-07-10 11:10:27,981:INFO:Uploading model into container now
2024-07-10 11:10:27,981:INFO:_master_model_container: 4
2024-07-10 11:10:27,981:INFO:_display_container: 2
2024-07-10 11:10:27,981:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best')
2024-07-10 11:10:27,981:INFO:create_model() successfully completed......................................
2024-07-10 11:10:28,040:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:28,040:INFO:Creating metrics dataframe
2024-07-10 11:10:28,043:INFO:Initializing SVM - Linear Kernel
2024-07-10 11:10:28,043:INFO:Total runtime is 0.014409979184468586 minutes
2024-07-10 11:10:28,044:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:28,045:INFO:Initializing create_model()
2024-07-10 11:10:28,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:28,045:INFO:Checking exceptions
2024-07-10 11:10:28,045:INFO:Importing libraries
2024-07-10 11:10:28,046:INFO:Copying training dataset
2024-07-10 11:10:28,048:INFO:Defining folds
2024-07-10 11:10:28,048:INFO:Declaring metric variables
2024-07-10 11:10:28,049:INFO:Importing untrained model
2024-07-10 11:10:28,050:INFO:SVM - Linear Kernel Imported successfully
2024-07-10 11:10:28,054:INFO:Starting cross validation
2024-07-10 11:10:28,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:28,119:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,123:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,123:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,125:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,126:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,129:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,130:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,131:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,131:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,133:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,134:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,134:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,138:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,138:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,139:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,155:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,158:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,160:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,169:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,172:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,174:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,174:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,178:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,180:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,180:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,182:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,185:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,186:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,189:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,192:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,197:INFO:Calculating mean and std
2024-07-10 11:10:28,197:INFO:Creating metrics dataframe
2024-07-10 11:10:28,198:INFO:Uploading results into container
2024-07-10 11:10:28,198:INFO:Uploading model into container now
2024-07-10 11:10:28,198:INFO:_master_model_container: 5
2024-07-10 11:10:28,198:INFO:_display_container: 2
2024-07-10 11:10:28,198:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1427, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-10 11:10:28,198:INFO:create_model() successfully completed......................................
2024-07-10 11:10:28,257:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:28,257:INFO:Creating metrics dataframe
2024-07-10 11:10:28,261:INFO:Initializing Ridge Classifier
2024-07-10 11:10:28,261:INFO:Total runtime is 0.018054648240407308 minutes
2024-07-10 11:10:28,262:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:28,262:INFO:Initializing create_model()
2024-07-10 11:10:28,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:28,263:INFO:Checking exceptions
2024-07-10 11:10:28,263:INFO:Importing libraries
2024-07-10 11:10:28,263:INFO:Copying training dataset
2024-07-10 11:10:28,265:INFO:Defining folds
2024-07-10 11:10:28,265:INFO:Declaring metric variables
2024-07-10 11:10:28,266:INFO:Importing untrained model
2024-07-10 11:10:28,267:INFO:Ridge Classifier Imported successfully
2024-07-10 11:10:28,270:INFO:Starting cross validation
2024-07-10 11:10:28,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:28,292:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,294:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,297:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,298:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,299:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,300:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,300:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,301:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,302:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,304:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,306:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,307:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,309:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,310:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,312:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,312:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,313:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,316:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,319:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,322:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,323:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,325:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,326:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,327:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,328:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,330:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,331:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,332:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,333:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,336:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:28,347:INFO:Calculating mean and std
2024-07-10 11:10:28,348:INFO:Creating metrics dataframe
2024-07-10 11:10:28,348:INFO:Uploading results into container
2024-07-10 11:10:28,349:INFO:Uploading model into container now
2024-07-10 11:10:28,349:INFO:_master_model_container: 6
2024-07-10 11:10:28,349:INFO:_display_container: 2
2024-07-10 11:10:28,349:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1427, solver='auto',
                tol=0.0001)
2024-07-10 11:10:28,349:INFO:create_model() successfully completed......................................
2024-07-10 11:10:28,409:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:28,409:INFO:Creating metrics dataframe
2024-07-10 11:10:28,414:INFO:Initializing Random Forest Classifier
2024-07-10 11:10:28,414:INFO:Total runtime is 0.020607964197794596 minutes
2024-07-10 11:10:28,416:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:28,417:INFO:Initializing create_model()
2024-07-10 11:10:28,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:28,417:INFO:Checking exceptions
2024-07-10 11:10:28,417:INFO:Importing libraries
2024-07-10 11:10:28,417:INFO:Copying training dataset
2024-07-10 11:10:28,419:INFO:Defining folds
2024-07-10 11:10:28,419:INFO:Declaring metric variables
2024-07-10 11:10:28,421:INFO:Importing untrained model
2024-07-10 11:10:28,422:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:10:28,425:INFO:Starting cross validation
2024-07-10 11:10:28,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:29,204:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,208:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,211:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,234:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,239:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,242:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,244:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,248:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,251:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,251:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,255:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,256:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,256:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,259:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,260:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,260:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,261:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,262:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,264:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,266:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,267:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,324:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,327:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,333:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,492:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,495:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,498:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,500:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,512:INFO:Calculating mean and std
2024-07-10 11:10:29,512:INFO:Creating metrics dataframe
2024-07-10 11:10:29,513:INFO:Uploading results into container
2024-07-10 11:10:29,513:INFO:Uploading model into container now
2024-07-10 11:10:29,514:INFO:_master_model_container: 7
2024-07-10 11:10:29,514:INFO:_display_container: 2
2024-07-10 11:10:29,514:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False)
2024-07-10 11:10:29,514:INFO:create_model() successfully completed......................................
2024-07-10 11:10:29,573:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:29,573:INFO:Creating metrics dataframe
2024-07-10 11:10:29,576:INFO:Initializing Quadratic Discriminant Analysis
2024-07-10 11:10:29,576:INFO:Total runtime is 0.03997308015823364 minutes
2024-07-10 11:10:29,579:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:29,579:INFO:Initializing create_model()
2024-07-10 11:10:29,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:29,579:INFO:Checking exceptions
2024-07-10 11:10:29,579:INFO:Importing libraries
2024-07-10 11:10:29,579:INFO:Copying training dataset
2024-07-10 11:10:29,581:INFO:Defining folds
2024-07-10 11:10:29,582:INFO:Declaring metric variables
2024-07-10 11:10:29,583:INFO:Importing untrained model
2024-07-10 11:10:29,584:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-10 11:10:29,587:INFO:Starting cross validation
2024-07-10 11:10:29,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:29,601:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,605:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,605:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,605:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,607:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,607:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,607:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,608:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,608:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,609:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,609:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,609:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,610:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,610:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,610:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,612:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,613:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,614:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,614:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,614:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,615:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,615:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,616:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,617:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,617:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,618:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,618:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,618:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,619:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,621:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,623:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,623:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,623:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,623:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,624:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,625:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,625:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,626:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,627:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,626:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,627:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,627:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,628:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,628:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,644:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,660:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,661:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,670:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,670:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,670:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,671:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,671:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,672:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,672:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,672:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,673:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,675:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,676:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,676:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,676:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,676:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,677:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-10 11:10:29,678:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,679:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,680:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,681:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,681:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,681:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:960: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-10 11:10:29,681:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:963: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-10 11:10:29,682:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,682:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,683:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/pycaret/internal/metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 1049, in check_array
    _assert_all_finite(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-10 11:10:29,683:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,684:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,684:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,685:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,686:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,687:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,688:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,688:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:29,690:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,695:INFO:Calculating mean and std
2024-07-10 11:10:29,695:INFO:Creating metrics dataframe
2024-07-10 11:10:29,696:INFO:Uploading results into container
2024-07-10 11:10:29,696:INFO:Uploading model into container now
2024-07-10 11:10:29,696:INFO:_master_model_container: 8
2024-07-10 11:10:29,696:INFO:_display_container: 2
2024-07-10 11:10:29,696:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-10 11:10:29,696:INFO:create_model() successfully completed......................................
2024-07-10 11:10:29,757:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:29,757:INFO:Creating metrics dataframe
2024-07-10 11:10:29,760:INFO:Initializing Ada Boost Classifier
2024-07-10 11:10:29,760:INFO:Total runtime is 0.043038646380106606 minutes
2024-07-10 11:10:29,763:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:29,763:INFO:Initializing create_model()
2024-07-10 11:10:29,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:29,763:INFO:Checking exceptions
2024-07-10 11:10:29,763:INFO:Importing libraries
2024-07-10 11:10:29,763:INFO:Copying training dataset
2024-07-10 11:10:29,766:INFO:Defining folds
2024-07-10 11:10:29,766:INFO:Declaring metric variables
2024-07-10 11:10:29,767:INFO:Importing untrained model
2024-07-10 11:10:29,768:INFO:Ada Boost Classifier Imported successfully
2024-07-10 11:10:29,771:INFO:Starting cross validation
2024-07-10 11:10:29,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:29,793:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,793:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,797:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,800:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,804:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,809:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,809:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,822:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,958:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,961:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,964:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,979:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,980:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,981:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:29,982:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,984:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,984:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,986:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,989:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,993:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,994:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,994:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:29,998:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,000:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-10 11:10:30,000:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,001:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,003:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,003:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,006:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,006:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,011:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,033:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,036:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,039:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,099:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,101:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,104:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,114:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,116:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,118:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,133:INFO:Calculating mean and std
2024-07-10 11:10:30,134:INFO:Creating metrics dataframe
2024-07-10 11:10:30,134:INFO:Uploading results into container
2024-07-10 11:10:30,135:INFO:Uploading model into container now
2024-07-10 11:10:30,135:INFO:_master_model_container: 9
2024-07-10 11:10:30,135:INFO:_display_container: 2
2024-07-10 11:10:30,135:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1427)
2024-07-10 11:10:30,135:INFO:create_model() successfully completed......................................
2024-07-10 11:10:30,196:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:30,196:INFO:Creating metrics dataframe
2024-07-10 11:10:30,200:INFO:Initializing Gradient Boosting Classifier
2024-07-10 11:10:30,200:INFO:Total runtime is 0.050360882282257075 minutes
2024-07-10 11:10:30,202:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:30,202:INFO:Initializing create_model()
2024-07-10 11:10:30,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:30,202:INFO:Checking exceptions
2024-07-10 11:10:30,202:INFO:Importing libraries
2024-07-10 11:10:30,202:INFO:Copying training dataset
2024-07-10 11:10:30,205:INFO:Defining folds
2024-07-10 11:10:30,205:INFO:Declaring metric variables
2024-07-10 11:10:30,207:INFO:Importing untrained model
2024-07-10 11:10:30,208:INFO:Gradient Boosting Classifier Imported successfully
2024-07-10 11:10:30,210:INFO:Starting cross validation
2024-07-10 11:10:30,211:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:30,818:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,825:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,828:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,831:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,836:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,838:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,840:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,841:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,847:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,849:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,850:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,853:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,853:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,855:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,857:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,859:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,862:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,862:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,865:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,867:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,871:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,872:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,875:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:30,877:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,209:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,214:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,215:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,218:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,219:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,221:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,229:INFO:Calculating mean and std
2024-07-10 11:10:31,229:INFO:Creating metrics dataframe
2024-07-10 11:10:31,230:INFO:Uploading results into container
2024-07-10 11:10:31,230:INFO:Uploading model into container now
2024-07-10 11:10:31,230:INFO:_master_model_container: 10
2024-07-10 11:10:31,230:INFO:_display_container: 2
2024-07-10 11:10:31,231:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1427, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-10 11:10:31,231:INFO:create_model() successfully completed......................................
2024-07-10 11:10:31,294:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:31,294:INFO:Creating metrics dataframe
2024-07-10 11:10:31,298:INFO:Initializing Linear Discriminant Analysis
2024-07-10 11:10:31,299:INFO:Total runtime is 0.06867713133494059 minutes
2024-07-10 11:10:31,300:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:31,300:INFO:Initializing create_model()
2024-07-10 11:10:31,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:31,300:INFO:Checking exceptions
2024-07-10 11:10:31,300:INFO:Importing libraries
2024-07-10 11:10:31,300:INFO:Copying training dataset
2024-07-10 11:10:31,303:INFO:Defining folds
2024-07-10 11:10:31,303:INFO:Declaring metric variables
2024-07-10 11:10:31,304:INFO:Importing untrained model
2024-07-10 11:10:31,306:INFO:Linear Discriminant Analysis Imported successfully
2024-07-10 11:10:31,309:INFO:Starting cross validation
2024-07-10 11:10:31,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:31,330:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,332:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,333:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,335:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,335:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,335:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,340:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,341:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,341:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,344:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,347:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,347:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,349:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,350:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,352:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,353:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,357:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,359:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,360:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,363:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,363:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,364:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,365:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,366:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,367:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,369:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,370:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,371:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,374:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,376:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,389:INFO:Calculating mean and std
2024-07-10 11:10:31,390:INFO:Creating metrics dataframe
2024-07-10 11:10:31,390:INFO:Uploading results into container
2024-07-10 11:10:31,390:INFO:Uploading model into container now
2024-07-10 11:10:31,391:INFO:_master_model_container: 11
2024-07-10 11:10:31,391:INFO:_display_container: 2
2024-07-10 11:10:31,391:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-10 11:10:31,391:INFO:create_model() successfully completed......................................
2024-07-10 11:10:31,450:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:31,450:INFO:Creating metrics dataframe
2024-07-10 11:10:31,454:INFO:Initializing Extra Trees Classifier
2024-07-10 11:10:31,454:INFO:Total runtime is 0.07127196391423543 minutes
2024-07-10 11:10:31,456:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:31,456:INFO:Initializing create_model()
2024-07-10 11:10:31,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:31,456:INFO:Checking exceptions
2024-07-10 11:10:31,456:INFO:Importing libraries
2024-07-10 11:10:31,456:INFO:Copying training dataset
2024-07-10 11:10:31,459:INFO:Defining folds
2024-07-10 11:10:31,459:INFO:Declaring metric variables
2024-07-10 11:10:31,460:INFO:Importing untrained model
2024-07-10 11:10:31,462:INFO:Extra Trees Classifier Imported successfully
2024-07-10 11:10:31,464:INFO:Starting cross validation
2024-07-10 11:10:31,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:31,912:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,915:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,924:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,925:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,940:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,976:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:31,990:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,000:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,003:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,023:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,026:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,031:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,042:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,045:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,047:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,047:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,051:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,055:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,062:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,065:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,065:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,068:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,068:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,074:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,185:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,188:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,191:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,193:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,196:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,199:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:32,204:INFO:Calculating mean and std
2024-07-10 11:10:32,205:INFO:Creating metrics dataframe
2024-07-10 11:10:32,206:INFO:Uploading results into container
2024-07-10 11:10:32,206:INFO:Uploading model into container now
2024-07-10 11:10:32,207:INFO:_master_model_container: 12
2024-07-10 11:10:32,207:INFO:_display_container: 2
2024-07-10 11:10:32,207:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1427, verbose=0,
                     warm_start=False)
2024-07-10 11:10:32,207:INFO:create_model() successfully completed......................................
2024-07-10 11:10:32,368:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:32,368:INFO:Creating metrics dataframe
2024-07-10 11:10:32,374:INFO:Initializing Light Gradient Boosting Machine
2024-07-10 11:10:32,374:INFO:Total runtime is 0.08659828106562296 minutes
2024-07-10 11:10:32,375:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:32,375:INFO:Initializing create_model()
2024-07-10 11:10:32,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:32,376:INFO:Checking exceptions
2024-07-10 11:10:32,376:INFO:Importing libraries
2024-07-10 11:10:32,376:INFO:Copying training dataset
2024-07-10 11:10:32,378:INFO:Defining folds
2024-07-10 11:10:32,378:INFO:Declaring metric variables
2024-07-10 11:10:32,379:INFO:Importing untrained model
2024-07-10 11:10:32,381:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-10 11:10:32,383:INFO:Starting cross validation
2024-07-10 11:10:32,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:34,608:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,611:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,614:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,710:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,715:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,724:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,906:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,913:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,923:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,955:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,959:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,965:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,988:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,990:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,993:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,996:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:34,999:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,002:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,051:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,055:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,055:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,058:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,059:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,062:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,345:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,348:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,350:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,363:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,366:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,368:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,375:INFO:Calculating mean and std
2024-07-10 11:10:35,375:INFO:Creating metrics dataframe
2024-07-10 11:10:35,376:INFO:Uploading results into container
2024-07-10 11:10:35,376:INFO:Uploading model into container now
2024-07-10 11:10:35,376:INFO:_master_model_container: 13
2024-07-10 11:10:35,376:INFO:_display_container: 2
2024-07-10 11:10:35,377:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1427, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-10 11:10:35,377:INFO:create_model() successfully completed......................................
2024-07-10 11:10:35,439:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:35,439:INFO:Creating metrics dataframe
2024-07-10 11:10:35,444:INFO:Initializing Dummy Classifier
2024-07-10 11:10:35,444:INFO:Total runtime is 0.1377700130144755 minutes
2024-07-10 11:10:35,445:INFO:SubProcess create_model() called ==================================
2024-07-10 11:10:35,445:INFO:Initializing create_model()
2024-07-10 11:10:35,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31e7387d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:35,445:INFO:Checking exceptions
2024-07-10 11:10:35,445:INFO:Importing libraries
2024-07-10 11:10:35,446:INFO:Copying training dataset
2024-07-10 11:10:35,448:INFO:Defining folds
2024-07-10 11:10:35,448:INFO:Declaring metric variables
2024-07-10 11:10:35,449:INFO:Importing untrained model
2024-07-10 11:10:35,451:INFO:Dummy Classifier Imported successfully
2024-07-10 11:10:35,453:INFO:Starting cross validation
2024-07-10 11:10:35,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-10 11:10:35,473:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,475:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,477:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,478:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,478:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,479:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,480:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,481:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,483:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,486:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,487:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,487:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,489:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,490:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,491:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,493:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,493:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,494:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,496:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,497:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,499:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,502:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,503:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,506:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,506:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,507:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,507:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,507:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,508:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,509:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,509:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,510:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,511:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,512:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,515:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,518:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,519:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-07-10 11:10:35,520:WARNING:/Users/henrynonso/Desktop/threat_detection_done/venv/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'Malicious') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-10 11:10:35,531:INFO:Calculating mean and std
2024-07-10 11:10:35,531:INFO:Creating metrics dataframe
2024-07-10 11:10:35,532:INFO:Uploading results into container
2024-07-10 11:10:35,532:INFO:Uploading model into container now
2024-07-10 11:10:35,532:INFO:_master_model_container: 14
2024-07-10 11:10:35,532:INFO:_display_container: 2
2024-07-10 11:10:35,532:INFO:DummyClassifier(constant=None, random_state=1427, strategy='prior')
2024-07-10 11:10:35,532:INFO:create_model() successfully completed......................................
2024-07-10 11:10:35,592:INFO:SubProcess create_model() end ==================================
2024-07-10 11:10:35,592:INFO:Creating metrics dataframe
2024-07-10 11:10:35,600:INFO:Initializing create_model()
2024-07-10 11:10:35,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:35,600:INFO:Checking exceptions
2024-07-10 11:10:35,601:INFO:Importing libraries
2024-07-10 11:10:35,601:INFO:Copying training dataset
2024-07-10 11:10:35,603:INFO:Defining folds
2024-07-10 11:10:35,603:INFO:Declaring metric variables
2024-07-10 11:10:35,603:INFO:Importing untrained model
2024-07-10 11:10:35,603:INFO:Declaring custom model
2024-07-10 11:10:35,604:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:10:35,604:INFO:Cross validation set to False
2024-07-10 11:10:35,604:INFO:Fitting Model
2024-07-10 11:10:35,618:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best')
2024-07-10 11:10:35,618:INFO:create_model() successfully completed......................................
2024-07-10 11:10:35,681:INFO:Initializing create_model()
2024-07-10 11:10:35,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:35,681:INFO:Checking exceptions
2024-07-10 11:10:35,683:INFO:Importing libraries
2024-07-10 11:10:35,683:INFO:Copying training dataset
2024-07-10 11:10:35,686:INFO:Defining folds
2024-07-10 11:10:35,686:INFO:Declaring metric variables
2024-07-10 11:10:35,686:INFO:Importing untrained model
2024-07-10 11:10:35,686:INFO:Declaring custom model
2024-07-10 11:10:35,686:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:10:35,687:INFO:Cross validation set to False
2024-07-10 11:10:35,687:INFO:Fitting Model
2024-07-10 11:10:35,831:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False)
2024-07-10 11:10:35,831:INFO:create_model() successfully completed......................................
2024-07-10 11:10:35,899:INFO:_master_model_container: 14
2024-07-10 11:10:35,899:INFO:_display_container: 2
2024-07-10 11:10:35,899:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False)]
2024-07-10 11:10:35,899:INFO:compare_models() successfully completed......................................
2024-07-10 11:10:35,900:INFO:Initializing finalize_model()
2024-07-10 11:10:35,900:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-10 11:10:35,900:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best')
2024-07-10 11:10:35,902:INFO:Initializing create_model()
2024-07-10 11:10:35,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1427, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:35,902:INFO:Checking exceptions
2024-07-10 11:10:35,903:INFO:Importing libraries
2024-07-10 11:10:35,903:INFO:Copying training dataset
2024-07-10 11:10:35,903:INFO:Defining folds
2024-07-10 11:10:35,903:INFO:Declaring metric variables
2024-07-10 11:10:35,903:INFO:Importing untrained model
2024-07-10 11:10:35,903:INFO:Declaring custom model
2024-07-10 11:10:35,904:INFO:Decision Tree Classifier Imported successfully
2024-07-10 11:10:35,904:INFO:Cross validation set to False
2024-07-10 11:10:35,904:INFO:Fitting Model
2024-07-10 11:10:35,930:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1427,
                                        splitter='best'))],
         verbose=False)
2024-07-10 11:10:35,930:INFO:create_model() successfully completed......................................
2024-07-10 11:10:35,992:INFO:_master_model_container: 14
2024-07-10 11:10:35,993:INFO:_display_container: 2
2024-07-10 11:10:35,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1427,
                                        splitter='best'))],
         verbose=False)
2024-07-10 11:10:35,995:INFO:finalize_model() successfully completed......................................
2024-07-10 11:10:36,055:INFO:Initializing predict_model()
2024-07-10 11:10:36,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1427,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30f57b060>)
2024-07-10 11:10:36,055:INFO:Checking exceptions
2024-07-10 11:10:36,055:INFO:Preloading libraries
2024-07-10 11:10:36,176:INFO:Initializing finalize_model()
2024-07-10 11:10:36,176:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-07-10 11:10:36,176:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False)
2024-07-10 11:10:36,178:INFO:Initializing create_model()
2024-07-10 11:10:36,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1427, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-07-10 11:10:36,178:INFO:Checking exceptions
2024-07-10 11:10:36,178:INFO:Importing libraries
2024-07-10 11:10:36,178:INFO:Copying training dataset
2024-07-10 11:10:36,178:INFO:Defining folds
2024-07-10 11:10:36,178:INFO:Declaring metric variables
2024-07-10 11:10:36,179:INFO:Importing untrained model
2024-07-10 11:10:36,179:INFO:Declaring custom model
2024-07-10 11:10:36,179:INFO:Random Forest Classifier Imported successfully
2024-07-10 11:10:36,179:INFO:Cross validation set to False
2024-07-10 11:10:36,179:INFO:Fitting Model
2024-07-10 11:10:36,385:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=1427, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-10 11:10:36,385:INFO:create_model() successfully completed......................................
2024-07-10 11:10:36,445:INFO:_master_model_container: 14
2024-07-10 11:10:36,445:INFO:_display_container: 3
2024-07-10 11:10:36,447:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=1427, verbose=0,
                                        warm_start=False))],
         verbose=False)
2024-07-10 11:10:36,447:INFO:finalize_model() successfully completed......................................
2024-07-10 11:10:36,508:INFO:Initializing predict_model()
2024-07-10 11:10:36,508:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30564b2d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['src_ip', 'dst_ip', 'proto',
                                             'src_port', 'dst_port'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=1427, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30f57bd80>)
2024-07-10 11:10:36,508:INFO:Checking exceptions
2024-07-10 11:10:36,508:INFO:Preloading libraries
2024-07-10 11:48:06,374:WARNING:/Users/henrynonso/Desktop/threat_detection_done/main.py:52: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.

  sns.countplot(x='predictions', data=df, palette='viridis')

